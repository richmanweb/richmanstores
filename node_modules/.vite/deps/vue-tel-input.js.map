{
  "version": 3,
  "sources": ["../../vue-tel-input/dist/vue-tel-input.js"],
  "sourcesContent": ["import { resolveDirective as ke, openBlock as h, createElementBlock as p, normalizeClass as C, withDirectives as M, withKeys as I, createElementVNode as S, createCommentVNode as O, toDisplayString as _, renderSlot as q, withModifiers as Be, vModelText as Ge, Fragment as je, renderList as Ue, vModelDynamic as He } from \"vue\";\nconst Ve = [\n  [\n    \"Afghanistan (‫افغانستان‬‎)\",\n    \"af\",\n    \"93\"\n  ],\n  [\n    \"Albania (Shqipëri)\",\n    \"al\",\n    \"355\"\n  ],\n  [\n    \"Algeria (‫الجزائر‬‎)\",\n    \"dz\",\n    \"213\"\n  ],\n  [\n    \"American Samoa\",\n    \"as\",\n    \"1\",\n    5,\n    [\"684\"]\n  ],\n  [\n    \"Andorra\",\n    \"ad\",\n    \"376\"\n  ],\n  [\n    \"Angola\",\n    \"ao\",\n    \"244\"\n  ],\n  [\n    \"Anguilla\",\n    \"ai\",\n    \"1\",\n    6,\n    [\"264\"]\n  ],\n  [\n    \"Antigua and Barbuda\",\n    \"ag\",\n    \"1\",\n    7,\n    [\"268\"]\n  ],\n  [\n    \"Argentina\",\n    \"ar\",\n    \"54\"\n  ],\n  [\n    \"Armenia (Հայաստան)\",\n    \"am\",\n    \"374\"\n  ],\n  [\n    \"Aruba\",\n    \"aw\",\n    \"297\"\n  ],\n  [\n    \"Ascension Island\",\n    \"ac\",\n    \"247\"\n  ],\n  [\n    \"Australia\",\n    \"au\",\n    \"61\",\n    0\n  ],\n  [\n    \"Austria (Österreich)\",\n    \"at\",\n    \"43\"\n  ],\n  [\n    \"Azerbaijan (Azərbaycan)\",\n    \"az\",\n    \"994\"\n  ],\n  [\n    \"Bahamas\",\n    \"bs\",\n    \"1\",\n    8,\n    [\"242\"]\n  ],\n  [\n    \"Bahrain (‫البحرين‬‎)\",\n    \"bh\",\n    \"973\"\n  ],\n  [\n    \"Bangladesh (বাংলাদেশ)\",\n    \"bd\",\n    \"880\"\n  ],\n  [\n    \"Barbados\",\n    \"bb\",\n    \"1\",\n    9,\n    [\"246\"]\n  ],\n  [\n    \"Belarus (Беларусь)\",\n    \"by\",\n    \"375\"\n  ],\n  [\n    \"Belgium (België)\",\n    \"be\",\n    \"32\"\n  ],\n  [\n    \"Belize\",\n    \"bz\",\n    \"501\"\n  ],\n  [\n    \"Benin (Bénin)\",\n    \"bj\",\n    \"229\"\n  ],\n  [\n    \"Bermuda\",\n    \"bm\",\n    \"1\",\n    10,\n    [\"441\"]\n  ],\n  [\n    \"Bhutan (འབྲུག)\",\n    \"bt\",\n    \"975\"\n  ],\n  [\n    \"Bolivia\",\n    \"bo\",\n    \"591\"\n  ],\n  [\n    \"Bosnia and Herzegovina (Босна и Херцеговина)\",\n    \"ba\",\n    \"387\"\n  ],\n  [\n    \"Botswana\",\n    \"bw\",\n    \"267\"\n  ],\n  [\n    \"Brazil (Brasil)\",\n    \"br\",\n    \"55\"\n  ],\n  [\n    \"British Indian Ocean Territory\",\n    \"io\",\n    \"246\"\n  ],\n  [\n    \"British Virgin Islands\",\n    \"vg\",\n    \"1\",\n    11,\n    [\"284\"]\n  ],\n  [\n    \"Brunei\",\n    \"bn\",\n    \"673\"\n  ],\n  [\n    \"Bulgaria (България)\",\n    \"bg\",\n    \"359\"\n  ],\n  [\n    \"Burkina Faso\",\n    \"bf\",\n    \"226\"\n  ],\n  [\n    \"Burundi (Uburundi)\",\n    \"bi\",\n    \"257\"\n  ],\n  [\n    \"Cambodia (កម្ពុជា)\",\n    \"kh\",\n    \"855\"\n  ],\n  [\n    \"Cameroon (Cameroun)\",\n    \"cm\",\n    \"237\"\n  ],\n  [\n    \"Canada\",\n    \"ca\",\n    \"1\",\n    1,\n    [\"204\", \"226\", \"236\", \"249\", \"250\", \"263\", \"289\", \"306\", \"343\", \"354\", \"365\", \"367\", \"368\", \"382\", \"387\", \"403\", \"416\", \"418\", \"428\", \"431\", \"437\", \"438\", \"450\", \"584\", \"468\", \"474\", \"506\", \"514\", \"519\", \"548\", \"579\", \"581\", \"584\", \"587\", \"604\", \"613\", \"639\", \"647\", \"672\", \"683\", \"705\", \"709\", \"742\", \"753\", \"778\", \"780\", \"782\", \"807\", \"819\", \"825\", \"867\", \"873\", \"902\", \"905\"]\n  ],\n  [\n    \"Cape Verde (Kabu Verdi)\",\n    \"cv\",\n    \"238\"\n  ],\n  [\n    \"Caribbean Netherlands\",\n    \"bq\",\n    \"599\",\n    1,\n    [\"3\", \"4\", \"7\"]\n  ],\n  [\n    \"Cayman Islands\",\n    \"ky\",\n    \"1\",\n    12,\n    [\"345\"]\n  ],\n  [\n    \"Central African Republic (République centrafricaine)\",\n    \"cf\",\n    \"236\"\n  ],\n  [\n    \"Chad (Tchad)\",\n    \"td\",\n    \"235\"\n  ],\n  [\n    \"Chile\",\n    \"cl\",\n    \"56\"\n  ],\n  [\n    \"China (中国)\",\n    \"cn\",\n    \"86\"\n  ],\n  [\n    \"Christmas Island\",\n    \"cx\",\n    \"61\",\n    2,\n    [\"89164\"]\n  ],\n  [\n    \"Cocos (Keeling) Islands\",\n    \"cc\",\n    \"61\",\n    1,\n    [\"89162\"]\n  ],\n  [\n    \"Colombia\",\n    \"co\",\n    \"57\"\n  ],\n  [\n    \"Comoros (‫جزر القمر‬‎)\",\n    \"km\",\n    \"269\"\n  ],\n  [\n    \"Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)\",\n    \"cd\",\n    \"243\"\n  ],\n  [\n    \"Congo (Republic) (Congo-Brazzaville)\",\n    \"cg\",\n    \"242\"\n  ],\n  [\n    \"Cook Islands\",\n    \"ck\",\n    \"682\"\n  ],\n  [\n    \"Costa Rica\",\n    \"cr\",\n    \"506\"\n  ],\n  [\n    \"Côte d’Ivoire\",\n    \"ci\",\n    \"225\"\n  ],\n  [\n    \"Croatia (Hrvatska)\",\n    \"hr\",\n    \"385\"\n  ],\n  [\n    \"Cuba\",\n    \"cu\",\n    \"53\"\n  ],\n  [\n    \"Curaçao\",\n    \"cw\",\n    \"599\",\n    0\n  ],\n  [\n    \"Cyprus (Κύπρος)\",\n    \"cy\",\n    \"357\"\n  ],\n  [\n    \"Czech Republic (Česká republika)\",\n    \"cz\",\n    \"420\"\n  ],\n  [\n    \"Denmark (Danmark)\",\n    \"dk\",\n    \"45\"\n  ],\n  [\n    \"Djibouti\",\n    \"dj\",\n    \"253\"\n  ],\n  [\n    \"Dominica\",\n    \"dm\",\n    \"1\",\n    13,\n    [\"767\"]\n  ],\n  [\n    \"Dominican Republic (República Dominicana)\",\n    \"do\",\n    \"1\",\n    2,\n    [\"809\", \"829\", \"849\"]\n  ],\n  [\n    \"Ecuador\",\n    \"ec\",\n    \"593\"\n  ],\n  [\n    \"Egypt (‫مصر‬‎)\",\n    \"eg\",\n    \"20\"\n  ],\n  [\n    \"El Salvador\",\n    \"sv\",\n    \"503\"\n  ],\n  [\n    \"Equatorial Guinea (Guinea Ecuatorial)\",\n    \"gq\",\n    \"240\"\n  ],\n  [\n    \"Eritrea\",\n    \"er\",\n    \"291\"\n  ],\n  [\n    \"Estonia (Eesti)\",\n    \"ee\",\n    \"372\"\n  ],\n  [\n    \"Eswatini\",\n    \"sz\",\n    \"268\"\n  ],\n  [\n    \"Ethiopia\",\n    \"et\",\n    \"251\"\n  ],\n  [\n    \"Falkland Islands (Islas Malvinas)\",\n    \"fk\",\n    \"500\"\n  ],\n  [\n    \"Faroe Islands (Føroyar)\",\n    \"fo\",\n    \"298\"\n  ],\n  [\n    \"Fiji\",\n    \"fj\",\n    \"679\"\n  ],\n  [\n    \"Finland (Suomi)\",\n    \"fi\",\n    \"358\",\n    0\n  ],\n  [\n    \"France\",\n    \"fr\",\n    \"33\"\n  ],\n  [\n    \"French Guiana (Guyane française)\",\n    \"gf\",\n    \"594\"\n  ],\n  [\n    \"French Polynesia (Polynésie française)\",\n    \"pf\",\n    \"689\"\n  ],\n  [\n    \"Gabon\",\n    \"ga\",\n    \"241\"\n  ],\n  [\n    \"Gambia\",\n    \"gm\",\n    \"220\"\n  ],\n  [\n    \"Georgia (საქართველო)\",\n    \"ge\",\n    \"995\"\n  ],\n  [\n    \"Germany (Deutschland)\",\n    \"de\",\n    \"49\"\n  ],\n  [\n    \"Ghana (Gaana)\",\n    \"gh\",\n    \"233\"\n  ],\n  [\n    \"Gibraltar\",\n    \"gi\",\n    \"350\"\n  ],\n  [\n    \"Greece (Ελλάδα)\",\n    \"gr\",\n    \"30\"\n  ],\n  [\n    \"Greenland (Kalaallit Nunaat)\",\n    \"gl\",\n    \"299\"\n  ],\n  [\n    \"Grenada\",\n    \"gd\",\n    \"1\",\n    14,\n    [\"473\"]\n  ],\n  [\n    \"Guadeloupe\",\n    \"gp\",\n    \"590\",\n    0\n  ],\n  [\n    \"Guam\",\n    \"gu\",\n    \"1\",\n    15,\n    [\"671\"]\n  ],\n  [\n    \"Guatemala\",\n    \"gt\",\n    \"502\"\n  ],\n  [\n    \"Guernsey\",\n    \"gg\",\n    \"44\",\n    1,\n    [\"1481\", \"7781\", \"7839\", \"7911\"]\n  ],\n  [\n    \"Guinea (Guinée)\",\n    \"gn\",\n    \"224\"\n  ],\n  [\n    \"Guinea-Bissau (Guiné Bissau)\",\n    \"gw\",\n    \"245\"\n  ],\n  [\n    \"Guyana\",\n    \"gy\",\n    \"592\"\n  ],\n  [\n    \"Haiti\",\n    \"ht\",\n    \"509\"\n  ],\n  [\n    \"Honduras\",\n    \"hn\",\n    \"504\"\n  ],\n  [\n    \"Hong Kong (香港)\",\n    \"hk\",\n    \"852\"\n  ],\n  [\n    \"Hungary (Magyarország)\",\n    \"hu\",\n    \"36\"\n  ],\n  [\n    \"Iceland (Ísland)\",\n    \"is\",\n    \"354\"\n  ],\n  [\n    \"India (भारत)\",\n    \"in\",\n    \"91\"\n  ],\n  [\n    \"Indonesia\",\n    \"id\",\n    \"62\"\n  ],\n  [\n    \"Iran (‫ایران‬‎)\",\n    \"ir\",\n    \"98\"\n  ],\n  [\n    \"Iraq (‫العراق‬‎)\",\n    \"iq\",\n    \"964\"\n  ],\n  [\n    \"Ireland\",\n    \"ie\",\n    \"353\"\n  ],\n  [\n    \"Isle of Man\",\n    \"im\",\n    \"44\",\n    2,\n    [\"1624\", \"74576\", \"7524\", \"7924\", \"7624\"]\n  ],\n  [\n    \"Israel (‫ישראל‬‎)\",\n    \"il\",\n    \"972\"\n  ],\n  [\n    \"Italy (Italia)\",\n    \"it\",\n    \"39\",\n    0\n  ],\n  [\n    \"Jamaica\",\n    \"jm\",\n    \"1\",\n    4,\n    [\"876\", \"658\"]\n  ],\n  [\n    \"Japan (日本)\",\n    \"jp\",\n    \"81\"\n  ],\n  [\n    \"Jersey\",\n    \"je\",\n    \"44\",\n    3,\n    [\"1534\", \"7509\", \"7700\", \"7797\", \"7829\", \"7937\"]\n  ],\n  [\n    \"Jordan (‫الأردن‬‎)\",\n    \"jo\",\n    \"962\"\n  ],\n  [\n    \"Kazakhstan (Казахстан)\",\n    \"kz\",\n    \"7\",\n    1,\n    [\"33\", \"7\"]\n  ],\n  [\n    \"Kenya\",\n    \"ke\",\n    \"254\"\n  ],\n  [\n    \"Kiribati\",\n    \"ki\",\n    \"686\"\n  ],\n  [\n    \"Kosovo\",\n    \"xk\",\n    \"383\"\n  ],\n  [\n    \"Kuwait (‫الكويت‬‎)\",\n    \"kw\",\n    \"965\"\n  ],\n  [\n    \"Kyrgyzstan (Кыргызстан)\",\n    \"kg\",\n    \"996\"\n  ],\n  [\n    \"Laos (ລາວ)\",\n    \"la\",\n    \"856\"\n  ],\n  [\n    \"Latvia (Latvija)\",\n    \"lv\",\n    \"371\"\n  ],\n  [\n    \"Lebanon (‫لبنان‬‎)\",\n    \"lb\",\n    \"961\"\n  ],\n  [\n    \"Lesotho\",\n    \"ls\",\n    \"266\"\n  ],\n  [\n    \"Liberia\",\n    \"lr\",\n    \"231\"\n  ],\n  [\n    \"Libya (‫ليبيا‬‎)\",\n    \"ly\",\n    \"218\"\n  ],\n  [\n    \"Liechtenstein\",\n    \"li\",\n    \"423\"\n  ],\n  [\n    \"Lithuania (Lietuva)\",\n    \"lt\",\n    \"370\"\n  ],\n  [\n    \"Luxembourg\",\n    \"lu\",\n    \"352\"\n  ],\n  [\n    \"Macau (澳門)\",\n    \"mo\",\n    \"853\"\n  ],\n  [\n    \"Madagascar (Madagasikara)\",\n    \"mg\",\n    \"261\"\n  ],\n  [\n    \"Malawi\",\n    \"mw\",\n    \"265\"\n  ],\n  [\n    \"Malaysia\",\n    \"my\",\n    \"60\"\n  ],\n  [\n    \"Maldives\",\n    \"mv\",\n    \"960\"\n  ],\n  [\n    \"Mali\",\n    \"ml\",\n    \"223\"\n  ],\n  [\n    \"Malta\",\n    \"mt\",\n    \"356\"\n  ],\n  [\n    \"Marshall Islands\",\n    \"mh\",\n    \"692\"\n  ],\n  [\n    \"Martinique\",\n    \"mq\",\n    \"596\"\n  ],\n  [\n    \"Mauritania (‫موريتانيا‬‎)\",\n    \"mr\",\n    \"222\"\n  ],\n  [\n    \"Mauritius (Moris)\",\n    \"mu\",\n    \"230\"\n  ],\n  [\n    \"Mayotte\",\n    \"yt\",\n    \"262\",\n    1,\n    [\"269\", \"639\"]\n  ],\n  [\n    \"Mexico (México)\",\n    \"mx\",\n    \"52\"\n  ],\n  [\n    \"Micronesia\",\n    \"fm\",\n    \"691\"\n  ],\n  [\n    \"Moldova (Republica Moldova)\",\n    \"md\",\n    \"373\"\n  ],\n  [\n    \"Monaco\",\n    \"mc\",\n    \"377\"\n  ],\n  [\n    \"Mongolia (Монгол)\",\n    \"mn\",\n    \"976\"\n  ],\n  [\n    \"Montenegro (Crna Gora)\",\n    \"me\",\n    \"382\"\n  ],\n  [\n    \"Montserrat\",\n    \"ms\",\n    \"1\",\n    16,\n    [\"664\"]\n  ],\n  [\n    \"Morocco (‫المغرب‬‎)\",\n    \"ma\",\n    \"212\",\n    0\n  ],\n  [\n    \"Mozambique (Moçambique)\",\n    \"mz\",\n    \"258\"\n  ],\n  [\n    \"Myanmar (Burma) (မြန်မာ)\",\n    \"mm\",\n    \"95\"\n  ],\n  [\n    \"Namibia (Namibië)\",\n    \"na\",\n    \"264\"\n  ],\n  [\n    \"Nauru\",\n    \"nr\",\n    \"674\"\n  ],\n  [\n    \"Nepal (नेपाल)\",\n    \"np\",\n    \"977\"\n  ],\n  [\n    \"Netherlands (Nederland)\",\n    \"nl\",\n    \"31\"\n  ],\n  [\n    \"New Caledonia (Nouvelle-Calédonie)\",\n    \"nc\",\n    \"687\"\n  ],\n  [\n    \"New Zealand\",\n    \"nz\",\n    \"64\"\n  ],\n  [\n    \"Nicaragua\",\n    \"ni\",\n    \"505\"\n  ],\n  [\n    \"Niger (Nijar)\",\n    \"ne\",\n    \"227\"\n  ],\n  [\n    \"Nigeria\",\n    \"ng\",\n    \"234\"\n  ],\n  [\n    \"Niue\",\n    \"nu\",\n    \"683\"\n  ],\n  [\n    \"Norfolk Island\",\n    \"nf\",\n    \"672\"\n  ],\n  [\n    \"North Korea (조선 민주주의 인민 공화국)\",\n    \"kp\",\n    \"850\"\n  ],\n  [\n    \"North Macedonia (Северна Македонија)\",\n    \"mk\",\n    \"389\"\n  ],\n  [\n    \"Northern Mariana Islands\",\n    \"mp\",\n    \"1\",\n    17,\n    [\"670\"]\n  ],\n  [\n    \"Norway (Norge)\",\n    \"no\",\n    \"47\",\n    0\n  ],\n  [\n    \"Oman (‫عُمان‬‎)\",\n    \"om\",\n    \"968\"\n  ],\n  [\n    \"Pakistan (‫پاکستان‬‎)\",\n    \"pk\",\n    \"92\"\n  ],\n  [\n    \"Palau\",\n    \"pw\",\n    \"680\"\n  ],\n  [\n    \"Palestine (‫فلسطين‬‎)\",\n    \"ps\",\n    \"970\"\n  ],\n  [\n    \"Panama (Panamá)\",\n    \"pa\",\n    \"507\"\n  ],\n  [\n    \"Papua New Guinea\",\n    \"pg\",\n    \"675\"\n  ],\n  [\n    \"Paraguay\",\n    \"py\",\n    \"595\"\n  ],\n  [\n    \"Peru (Perú)\",\n    \"pe\",\n    \"51\"\n  ],\n  [\n    \"Philippines\",\n    \"ph\",\n    \"63\"\n  ],\n  [\n    \"Poland (Polska)\",\n    \"pl\",\n    \"48\"\n  ],\n  [\n    \"Portugal\",\n    \"pt\",\n    \"351\"\n  ],\n  [\n    \"Puerto Rico\",\n    \"pr\",\n    \"1\",\n    3,\n    [\"787\", \"939\"]\n  ],\n  [\n    \"Qatar (‫قطر‬‎)\",\n    \"qa\",\n    \"974\"\n  ],\n  [\n    \"Réunion (La Réunion)\",\n    \"re\",\n    \"262\",\n    0\n  ],\n  [\n    \"Romania (România)\",\n    \"ro\",\n    \"40\"\n  ],\n  [\n    \"Russia (Россия)\",\n    \"ru\",\n    \"7\",\n    0\n  ],\n  [\n    \"Rwanda\",\n    \"rw\",\n    \"250\"\n  ],\n  [\n    \"Saint Barthélemy\",\n    \"bl\",\n    \"590\",\n    1\n  ],\n  [\n    \"Saint Helena\",\n    \"sh\",\n    \"290\"\n  ],\n  [\n    \"Saint Kitts and Nevis\",\n    \"kn\",\n    \"1\",\n    18,\n    [\"869\"]\n  ],\n  [\n    \"Saint Lucia\",\n    \"lc\",\n    \"1\",\n    19,\n    [\"758\"]\n  ],\n  [\n    \"Saint Martin (Saint-Martin (partie française))\",\n    \"mf\",\n    \"590\",\n    2\n  ],\n  [\n    \"Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)\",\n    \"pm\",\n    \"508\"\n  ],\n  [\n    \"Saint Vincent and the Grenadines\",\n    \"vc\",\n    \"1\",\n    20,\n    [\"784\"]\n  ],\n  [\n    \"Samoa\",\n    \"ws\",\n    \"685\"\n  ],\n  [\n    \"San Marino\",\n    \"sm\",\n    \"378\"\n  ],\n  [\n    \"São Tomé and Príncipe (São Tomé e Príncipe)\",\n    \"st\",\n    \"239\"\n  ],\n  [\n    \"Saudi Arabia (‫المملكة العربية السعودية‬‎)\",\n    \"sa\",\n    \"966\"\n  ],\n  [\n    \"Senegal (Sénégal)\",\n    \"sn\",\n    \"221\"\n  ],\n  [\n    \"Serbia (Србија)\",\n    \"rs\",\n    \"381\"\n  ],\n  [\n    \"Seychelles\",\n    \"sc\",\n    \"248\"\n  ],\n  [\n    \"Sierra Leone\",\n    \"sl\",\n    \"232\"\n  ],\n  [\n    \"Singapore\",\n    \"sg\",\n    \"65\"\n  ],\n  [\n    \"Sint Maarten\",\n    \"sx\",\n    \"1\",\n    21,\n    [\"721\"]\n  ],\n  [\n    \"Slovakia (Slovensko)\",\n    \"sk\",\n    \"421\"\n  ],\n  [\n    \"Slovenia (Slovenija)\",\n    \"si\",\n    \"386\"\n  ],\n  [\n    \"Solomon Islands\",\n    \"sb\",\n    \"677\"\n  ],\n  [\n    \"Somalia (Soomaaliya)\",\n    \"so\",\n    \"252\"\n  ],\n  [\n    \"South Africa\",\n    \"za\",\n    \"27\"\n  ],\n  [\n    \"South Korea (대한민국)\",\n    \"kr\",\n    \"82\"\n  ],\n  [\n    \"South Sudan (‫جنوب السودان‬‎)\",\n    \"ss\",\n    \"211\"\n  ],\n  [\n    \"Spain (España)\",\n    \"es\",\n    \"34\"\n  ],\n  [\n    \"Sri Lanka (ශ්‍රී ලංකාව)\",\n    \"lk\",\n    \"94\"\n  ],\n  [\n    \"Sudan (‫السودان‬‎)\",\n    \"sd\",\n    \"249\"\n  ],\n  [\n    \"Suriname\",\n    \"sr\",\n    \"597\"\n  ],\n  [\n    \"Svalbard and Jan Mayen\",\n    \"sj\",\n    \"47\",\n    1,\n    [\"79\"]\n  ],\n  [\n    \"Sweden (Sverige)\",\n    \"se\",\n    \"46\"\n  ],\n  [\n    \"Switzerland (Schweiz)\",\n    \"ch\",\n    \"41\"\n  ],\n  [\n    \"Syria (‫سوريا‬‎)\",\n    \"sy\",\n    \"963\"\n  ],\n  [\n    \"Taiwan (台灣)\",\n    \"tw\",\n    \"886\"\n  ],\n  [\n    \"Tajikistan\",\n    \"tj\",\n    \"992\"\n  ],\n  [\n    \"Tanzania\",\n    \"tz\",\n    \"255\"\n  ],\n  [\n    \"Thailand (ไทย)\",\n    \"th\",\n    \"66\"\n  ],\n  [\n    \"Timor-Leste\",\n    \"tl\",\n    \"670\"\n  ],\n  [\n    \"Togo\",\n    \"tg\",\n    \"228\"\n  ],\n  [\n    \"Tokelau\",\n    \"tk\",\n    \"690\"\n  ],\n  [\n    \"Tonga\",\n    \"to\",\n    \"676\"\n  ],\n  [\n    \"Trinidad and Tobago\",\n    \"tt\",\n    \"1\",\n    22,\n    [\"868\"]\n  ],\n  [\n    \"Tunisia (‫تونس‬‎)\",\n    \"tn\",\n    \"216\"\n  ],\n  [\n    \"Turkey (Türkiye)\",\n    \"tr\",\n    \"90\"\n  ],\n  [\n    \"Turkmenistan\",\n    \"tm\",\n    \"993\"\n  ],\n  [\n    \"Turks and Caicos Islands\",\n    \"tc\",\n    \"1\",\n    23,\n    [\"649\"]\n  ],\n  [\n    \"Tuvalu\",\n    \"tv\",\n    \"688\"\n  ],\n  [\n    \"U.S. Virgin Islands\",\n    \"vi\",\n    \"1\",\n    24,\n    [\"340\"]\n  ],\n  [\n    \"Uganda\",\n    \"ug\",\n    \"256\"\n  ],\n  [\n    \"Ukraine (Україна)\",\n    \"ua\",\n    \"380\"\n  ],\n  [\n    \"United Arab Emirates (‫الإمارات العربية المتحدة‬‎)\",\n    \"ae\",\n    \"971\"\n  ],\n  [\n    \"United Kingdom\",\n    \"gb\",\n    \"44\",\n    0\n  ],\n  [\n    \"United States\",\n    \"us\",\n    \"1\",\n    0\n  ],\n  [\n    \"Uruguay\",\n    \"uy\",\n    \"598\"\n  ],\n  [\n    \"Uzbekistan (Oʻzbekiston)\",\n    \"uz\",\n    \"998\"\n  ],\n  [\n    \"Vanuatu\",\n    \"vu\",\n    \"678\"\n  ],\n  [\n    \"Vatican City (Città del Vaticano)\",\n    \"va\",\n    \"39\",\n    1,\n    [\"06698\"]\n  ],\n  [\n    \"Venezuela\",\n    \"ve\",\n    \"58\"\n  ],\n  [\n    \"Vietnam (Việt Nam)\",\n    \"vn\",\n    \"84\"\n  ],\n  [\n    \"Wallis and Futuna (Wallis-et-Futuna)\",\n    \"wf\",\n    \"681\"\n  ],\n  [\n    \"Western Sahara (‫الصحراء الغربية‬‎)\",\n    \"eh\",\n    \"212\",\n    1,\n    [\"5288\", \"5289\"]\n  ],\n  [\n    \"Yemen (‫اليمن‬‎)\",\n    \"ye\",\n    \"967\"\n  ],\n  [\n    \"Zambia\",\n    \"zm\",\n    \"260\"\n  ],\n  [\n    \"Zimbabwe\",\n    \"zw\",\n    \"263\"\n  ],\n  [\n    \"Åland Islands\",\n    \"ax\",\n    \"358\",\n    1,\n    [\"18\"]\n  ]\n], Ke = Ve.map(([e, d, t, n = 0, r = null]) => ({\n  name: e,\n  iso2: d.toUpperCase(),\n  dialCode: t,\n  priority: n,\n  areaCodes: r\n}));\nfunction We() {\n  return fetch(\"https://ip2c.org/s\").then((e) => e.text()).then((e) => {\n    const d = (e || \"\").toString();\n    if (!d || d[0] !== \"1\")\n      throw new Error(\"unable to fetch the country\");\n    return d.substr(2, 2);\n  });\n}\nfunction ze(e, d) {\n  if (e.setSelectionRange)\n    e.focus(), e.setSelectionRange(d, d);\n  else if (e.createTextRange) {\n    const t = e.createTextRange();\n    t.collapse(!0), t.moveEnd(\"character\", d), t.moveStart(\"character\", d), t.select();\n  }\n}\nconst Xe = [\n  {\n    name: \"allCountries\",\n    type: Array,\n    default: Ke,\n    description: \"All countries that are used in <code>libphonenumber-js</code>, can be overridden by this prop\",\n    inDemo: !1\n  },\n  {\n    name: \"autoFormat\",\n    type: Boolean,\n    default: !0,\n    description: \"Auto update the input to the formatted phone number when it's valid\",\n    inDemo: !0\n  },\n  {\n    name: \"customValidate\",\n    type: [Boolean, RegExp],\n    default: !1,\n    description: \"Custom validation RegExp for input\",\n    inDemo: !1\n  },\n  {\n    name: \"defaultCountry\",\n    default: \"\",\n    type: [String, Number],\n    description: \"Default country (by iso2 or dialCode), will override the country fetched from IP address of user\",\n    inDemo: !1\n  },\n  {\n    name: \"disabled\",\n    default: !1,\n    type: Boolean,\n    description: \"Disable <code>vue-tel-input</code>, including the input & flag dropdown\",\n    inDemo: !1\n  },\n  {\n    name: \"autoDefaultCountry\",\n    default: !0,\n    type: Boolean,\n    description: \"To fetch default country based on IP address of user\",\n    inDemo: !1\n  },\n  {\n    name: \"dropdownOptions\",\n    type: Object,\n    description: \"Options for dropdown, see below\",\n    inDemo: !1\n  },\n  {\n    name: \"dropdownOptions.disabled\",\n    default: !1,\n    type: Boolean,\n    description: \"Disable dropdown\",\n    inDemo: !1\n  },\n  {\n    name: \"dropdownOptions.showDialCodeInList\",\n    default: !0,\n    type: Boolean,\n    description: \"Show dial code in the dropdown list\",\n    inDemo: !0\n  },\n  {\n    name: \"dropdownOptions.showDialCodeInSelection\",\n    default: !1,\n    type: Boolean,\n    description: \"Show dial code in the dropdown selection\",\n    inDemo: !0\n  },\n  {\n    name: \"dropdownOptions.showFlags\",\n    default: !0,\n    type: Boolean,\n    description: \"Show flags in the dropdown selection and list\",\n    inDemo: !0\n  },\n  {\n    name: \"dropdownOptions.showSearchBox\",\n    default: !1,\n    type: Boolean,\n    description: \"Show country search box\",\n    inDemo: !0\n  },\n  {\n    name: \"dropdownOptions.tabindex\",\n    default: 0,\n    type: Number,\n    description: \"Native dropdown <code>tabindex</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"ignoredCountries\",\n    default: [],\n    type: Array,\n    description: \"List of countries will NOT be shown on the dropdown\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions\",\n    type: Object,\n    description: \"Options for input, see below\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.autocomplete\",\n    type: String,\n    default: \"on\",\n    description: \"Native input <code>autocomplete</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.autofocus\",\n    type: Boolean,\n    default: !1,\n    description: \"Native input <code>autofocus</code> attribute\",\n    inDemo: !1\n  },\n  // {\n  //   name: 'inputOptions.dynamicPlaceholder',\n  //   default: false,\n  //   type: Boolean,\n  //   description: 'Placeholder as a sample phone number in the current country',\n  //   inDemo: false,\n  // },\n  {\n    name: \"inputOptions.aria-describedby\",\n    default: \"\",\n    type: String,\n    description: \"Native input <code>aria-describedby</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.id\",\n    default: \"\",\n    type: String,\n    description: \"Native input <code>id</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.maxlength\",\n    default: 25,\n    type: Number,\n    description: \"Native input <code>maxlength</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.name\",\n    default: \"telephone\",\n    type: String,\n    description: \"Native input <code>name</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.showDialCode\",\n    default: !1,\n    type: Boolean,\n    description: \"Show dial code in input\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.placeholder\",\n    default: \"Enter a phone number\",\n    type: String,\n    description: \"Placeholder for the input\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.readonly\",\n    default: !1,\n    type: Boolean,\n    description: \"Native input <code>readonly</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.required\",\n    default: !1,\n    type: Boolean,\n    description: \"Native input <code>required</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.tabindex\",\n    default: 0,\n    type: Number,\n    description: \"Native input <code>tabindex</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.type\",\n    default: \"tel\",\n    type: String,\n    description: \"Native input <code>type</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.styleClasses\",\n    default: \"\",\n    type: [String, Array, Object],\n    description: \"Custom classes for the <code>input</code>\",\n    inDemo: !1\n  },\n  {\n    name: \"invalidMsg\",\n    default: \"\",\n    type: String,\n    description: \"\",\n    inDemo: !1\n  },\n  {\n    name: \"mode\",\n    default: \"auto\",\n    type: String,\n    description: \"Allowed values: <code>'auto'</code> (Default set by phone),  <code>'international'</code> (Format number with the dial code i.e. + 61), <code>'national'</code> (Format number without dial code i.e. 0321232)\",\n    inDemo: !0,\n    options: [\"auto\", \"national\", \"international\"]\n  },\n  {\n    name: \"onlyCountries\",\n    default: [],\n    type: Array,\n    description: \"List of countries will be shown on the dropdown\",\n    inDemo: !1\n  },\n  {\n    name: \"preferredCountries\",\n    default: [],\n    type: Array,\n    description: \"Preferred countries list, will be on top of the dropdown\",\n    inDemo: !1\n  },\n  {\n    name: \"styleClasses\",\n    default: \"\",\n    type: [String, Array, Object],\n    description: \"Custom classes for the wrapper\",\n    inDemo: !1\n  },\n  {\n    name: \"validCharactersOnly\",\n    default: !1,\n    type: Boolean,\n    description: \"Only allow valid characters in a phone number (will also verify in <code>mounted</code>, so phone number with invalid characters will be shown as an empty string)\",\n    inDemo: !1\n  }\n], we = [...Xe].reduce((e, d) => {\n  if (d.name.includes(\".\")) {\n    const [t, n] = d.name.split(\".\");\n    e[t] ? Object.assign(e[t], { [n]: d.default }) : Object.assign(e, { [t]: { [n]: d.default } });\n  } else\n    Object.assign(e, { [d.name]: d.default });\n  return e;\n}, {}), G = {\n  options: { ...we }\n}, Ze = { version: 4, country_calling_codes: { 1: [\"US\", \"AG\", \"AI\", \"AS\", \"BB\", \"BM\", \"BS\", \"CA\", \"DM\", \"DO\", \"GD\", \"GU\", \"JM\", \"KN\", \"KY\", \"LC\", \"MP\", \"MS\", \"PR\", \"SX\", \"TC\", \"TT\", \"VC\", \"VG\", \"VI\"], 7: [\"RU\", \"KZ\"], 20: [\"EG\"], 27: [\"ZA\"], 30: [\"GR\"], 31: [\"NL\"], 32: [\"BE\"], 33: [\"FR\"], 34: [\"ES\"], 36: [\"HU\"], 39: [\"IT\", \"VA\"], 40: [\"RO\"], 41: [\"CH\"], 43: [\"AT\"], 44: [\"GB\", \"GG\", \"IM\", \"JE\"], 45: [\"DK\"], 46: [\"SE\"], 47: [\"NO\", \"SJ\"], 48: [\"PL\"], 49: [\"DE\"], 51: [\"PE\"], 52: [\"MX\"], 53: [\"CU\"], 54: [\"AR\"], 55: [\"BR\"], 56: [\"CL\"], 57: [\"CO\"], 58: [\"VE\"], 60: [\"MY\"], 61: [\"AU\", \"CC\", \"CX\"], 62: [\"ID\"], 63: [\"PH\"], 64: [\"NZ\"], 65: [\"SG\"], 66: [\"TH\"], 81: [\"JP\"], 82: [\"KR\"], 84: [\"VN\"], 86: [\"CN\"], 90: [\"TR\"], 91: [\"IN\"], 92: [\"PK\"], 93: [\"AF\"], 94: [\"LK\"], 95: [\"MM\"], 98: [\"IR\"], 211: [\"SS\"], 212: [\"MA\", \"EH\"], 213: [\"DZ\"], 216: [\"TN\"], 218: [\"LY\"], 220: [\"GM\"], 221: [\"SN\"], 222: [\"MR\"], 223: [\"ML\"], 224: [\"GN\"], 225: [\"CI\"], 226: [\"BF\"], 227: [\"NE\"], 228: [\"TG\"], 229: [\"BJ\"], 230: [\"MU\"], 231: [\"LR\"], 232: [\"SL\"], 233: [\"GH\"], 234: [\"NG\"], 235: [\"TD\"], 236: [\"CF\"], 237: [\"CM\"], 238: [\"CV\"], 239: [\"ST\"], 240: [\"GQ\"], 241: [\"GA\"], 242: [\"CG\"], 243: [\"CD\"], 244: [\"AO\"], 245: [\"GW\"], 246: [\"IO\"], 247: [\"AC\"], 248: [\"SC\"], 249: [\"SD\"], 250: [\"RW\"], 251: [\"ET\"], 252: [\"SO\"], 253: [\"DJ\"], 254: [\"KE\"], 255: [\"TZ\"], 256: [\"UG\"], 257: [\"BI\"], 258: [\"MZ\"], 260: [\"ZM\"], 261: [\"MG\"], 262: [\"RE\", \"YT\"], 263: [\"ZW\"], 264: [\"NA\"], 265: [\"MW\"], 266: [\"LS\"], 267: [\"BW\"], 268: [\"SZ\"], 269: [\"KM\"], 290: [\"SH\", \"TA\"], 291: [\"ER\"], 297: [\"AW\"], 298: [\"FO\"], 299: [\"GL\"], 350: [\"GI\"], 351: [\"PT\"], 352: [\"LU\"], 353: [\"IE\"], 354: [\"IS\"], 355: [\"AL\"], 356: [\"MT\"], 357: [\"CY\"], 358: [\"FI\", \"AX\"], 359: [\"BG\"], 370: [\"LT\"], 371: [\"LV\"], 372: [\"EE\"], 373: [\"MD\"], 374: [\"AM\"], 375: [\"BY\"], 376: [\"AD\"], 377: [\"MC\"], 378: [\"SM\"], 380: [\"UA\"], 381: [\"RS\"], 382: [\"ME\"], 383: [\"XK\"], 385: [\"HR\"], 386: [\"SI\"], 387: [\"BA\"], 389: [\"MK\"], 420: [\"CZ\"], 421: [\"SK\"], 423: [\"LI\"], 500: [\"FK\"], 501: [\"BZ\"], 502: [\"GT\"], 503: [\"SV\"], 504: [\"HN\"], 505: [\"NI\"], 506: [\"CR\"], 507: [\"PA\"], 508: [\"PM\"], 509: [\"HT\"], 590: [\"GP\", \"BL\", \"MF\"], 591: [\"BO\"], 592: [\"GY\"], 593: [\"EC\"], 594: [\"GF\"], 595: [\"PY\"], 596: [\"MQ\"], 597: [\"SR\"], 598: [\"UY\"], 599: [\"CW\", \"BQ\"], 670: [\"TL\"], 672: [\"NF\"], 673: [\"BN\"], 674: [\"NR\"], 675: [\"PG\"], 676: [\"TO\"], 677: [\"SB\"], 678: [\"VU\"], 679: [\"FJ\"], 680: [\"PW\"], 681: [\"WF\"], 682: [\"CK\"], 683: [\"NU\"], 685: [\"WS\"], 686: [\"KI\"], 687: [\"NC\"], 688: [\"TV\"], 689: [\"PF\"], 690: [\"TK\"], 691: [\"FM\"], 692: [\"MH\"], 850: [\"KP\"], 852: [\"HK\"], 853: [\"MO\"], 855: [\"KH\"], 856: [\"LA\"], 880: [\"BD\"], 886: [\"TW\"], 960: [\"MV\"], 961: [\"LB\"], 962: [\"JO\"], 963: [\"SY\"], 964: [\"IQ\"], 965: [\"KW\"], 966: [\"SA\"], 967: [\"YE\"], 968: [\"OM\"], 970: [\"PS\"], 971: [\"AE\"], 972: [\"IL\"], 973: [\"BH\"], 974: [\"QA\"], 975: [\"BT\"], 976: [\"MN\"], 977: [\"NP\"], 992: [\"TJ\"], 993: [\"TM\"], 994: [\"AZ\"], 995: [\"GE\"], 996: [\"KG\"], 998: [\"UZ\"] }, countries: { AC: [\"247\", \"00\", \"(?:[01589]\\\\d|[46])\\\\d{4}\", [5, 6]], AD: [\"376\", \"00\", \"(?:1|6\\\\d)\\\\d{7}|[135-9]\\\\d{5}\", [6, 8, 9], [[\"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"[135-9]\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"1\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"]]]], AE: [\"971\", \"00\", \"(?:[4-7]\\\\d|9[0-689])\\\\d{7}|800\\\\d{2,9}|[2-4679]\\\\d{7}\", [5, 6, 7, 8, 9, 10, 11, 12], [[\"(\\\\d{3})(\\\\d{2,9})\", \"$1 $2\", [\"60|8\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[236]|[479][2-8]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d)(\\\\d{5})\", \"$1 $2 $3\", [\"[479]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"]], \"0\"], AF: [\"93\", \"00\", \"[2-7]\\\\d{8}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-7]\"], \"0$1\"]], \"0\"], AG: [\"1\", \"011\", \"(?:268|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([457]\\\\d{6})$|1\", \"268$1\", 0, \"268\"], AI: [\"1\", \"011\", \"(?:264|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2457]\\\\d{6})$|1\", \"264$1\", 0, \"264\"], AL: [\"355\", \"00\", \"(?:700\\\\d\\\\d|900)\\\\d{3}|8\\\\d{5,7}|(?:[2-5]|6\\\\d)\\\\d{7}\", [6, 7, 8, 9], [[\"(\\\\d{3})(\\\\d{3,4})\", \"$1 $2\", [\"80|9\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"4[2-6]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2358][2-5]|4\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[23578]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"6\"], \"0$1\"]], \"0\"], AM: [\"374\", \"00\", \"(?:[1-489]\\\\d|55|60|77)\\\\d{6}\", [8], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]0\"], \"0 $1\"], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"2|3[12]\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"1|47\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[3-9]\"], \"0$1\"]], \"0\"], AO: [\"244\", \"00\", \"[29]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[29]\"]]]], AR: [\"54\", \"00\", \"(?:11|[89]\\\\d\\\\d)\\\\d{8}|[2368]\\\\d{9}\", [10, 11], [[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1 $2-$3\", [\"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])\", \"2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)\", \"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\", \"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"], \"0$1\", 1], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"1\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[68]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"[23]\"], \"0$1\", 1], [\"(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$2 15-$3-$4\", [\"9(?:2[2-469]|3[3-578])\", \"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))\", \"9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)\", \"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\", \"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"], \"0$1\", 0, \"$1 $2 $3-$4\"], [\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$2 15-$3-$4\", [\"91\"], \"0$1\", 0, \"$1 $2 $3-$4\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1-$2-$3\", [\"8\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$2 15-$3-$4\", [\"9\"], \"0$1\", 0, \"$1 $2 $3-$4\"]], \"0\", 0, \"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?\", \"9$1\"], AS: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|684|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([267]\\\\d{6})$|1\", \"684$1\", 0, \"684\"], AT: [\"43\", \"00\", \"1\\\\d{3,12}|2\\\\d{6,12}|43(?:(?:0\\\\d|5[02-9])\\\\d{3,9}|2\\\\d{4,5}|[3467]\\\\d{4}|8\\\\d{4,6}|9\\\\d{4,7})|5\\\\d{4,12}|8\\\\d{7,12}|9\\\\d{8,12}|(?:[367]\\\\d|4[0-24-9])\\\\d{4,11}\", [4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [[\"(\\\\d)(\\\\d{3,12})\", \"$1 $2\", [\"1(?:11|[2-9])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})\", \"$1 $2\", [\"517\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3,5})\", \"$1 $2\", [\"5[079]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3,10})\", \"$1 $2\", [\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3,9})\", \"$1 $2\", [\"[2-467]|5[2-6]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4,7})\", \"$1 $2 $3\", [\"5\"], \"0$1\"]], \"0\"], AU: [\"61\", \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\", \"1(?:[0-79]\\\\d{7}(?:\\\\d(?:\\\\d{2})?)?|8[0-24-9]\\\\d{7})|[2-478]\\\\d{8}|1\\\\d{4,7}\", [5, 6, 7, 8, 9, 10, 12], [[\"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"16\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"16\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"14|4\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[2378]\"], \"(0$1)\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:30|[89])\"]]], \"0\", 0, \"(183[12])|0\", 0, 0, 0, [[\"(?:(?:2(?:[0-26-9]\\\\d|3[0-8]|4[02-9]|5[0135-9])|3(?:[0-3589]\\\\d|4[0-578]|6[1-9]|7[0-35-9])|7(?:[013-57-9]\\\\d|2[0-8]))\\\\d{3}|8(?:51(?:0(?:0[03-9]|[12479]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\\\d|7[89]|9[0-4]))|(?:6[0-8]|[78]\\\\d)\\\\d{3}|9(?:[02-9]\\\\d{3}|1(?:(?:[0-58]\\\\d|6[0135-9])\\\\d|7(?:0[0-24-9]|[1-9]\\\\d)|9(?:[0-46-9]\\\\d|5[0-79])))))\\\\d{3}\", [9]], [\"4(?:(?:79|94)[01]|83[0-389])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[0-26-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\", [9]], [\"180(?:0\\\\d{3}|2)\\\\d{3}\", [7, 10]], [\"190[0-26]\\\\d{6}\", [10]], 0, 0, 0, [\"163\\\\d{2,6}\", [5, 6, 7, 8, 9]], [\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\", [9]], [\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\", [6, 8, 10, 12]]], \"0011\"], AW: [\"297\", \"00\", \"(?:[25-79]\\\\d\\\\d|800)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[25-9]\"]]]], AX: [\"358\", \"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\", \"2\\\\d{4,9}|35\\\\d{4,5}|(?:60\\\\d\\\\d|800)\\\\d{4,6}|7\\\\d{5,11}|(?:[14]\\\\d|3[0-46-9]|50)\\\\d{4,8}\", [5, 6, 7, 8, 9, 10, 11, 12], 0, \"0\", 0, 0, 0, 0, \"18\", 0, \"00\"], AZ: [\"994\", \"00\", \"365\\\\d{6}|(?:[124579]\\\\d|60|88)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"90\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[28]|2|365|46\", \"1[28]|2|365[45]|46\", \"1[28]|2|365(?:4|5[02])|46\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[13-9]\"], \"0$1\"]], \"0\"], BA: [\"387\", \"00\", \"6\\\\d{8}|(?:[35689]\\\\d|49|70)\\\\d{6}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6[1-3]|[7-9]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2-$3\", [\"[3-5]|6[56]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"6\"], \"0$1\"]], \"0\"], BB: [\"1\", \"011\", \"(?:246|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-9]\\\\d{6})$|1\", \"246$1\", 0, \"246\"], BD: [\"880\", \"00\", \"[1-469]\\\\d{9}|8[0-79]\\\\d{7,8}|[2-79]\\\\d{8}|[2-9]\\\\d{7}|[3-9]\\\\d{6}|[57-9]\\\\d{5}\", [6, 7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{4,6})\", \"$1-$2\", [\"31[5-8]|[459]1\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3,7})\", \"$1-$2\", [\"3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:[15]|28|4[14])|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3,6})\", \"$1-$2\", [\"[13-9]|22\"], \"0$1\"], [\"(\\\\d)(\\\\d{7,8})\", \"$1-$2\", [\"2\"], \"0$1\"]], \"0\"], BE: [\"32\", \"00\", \"4\\\\d{8}|[1-9]\\\\d{7}\", [8, 9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:80|9)0\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[239]|4[23]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[15-8]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"4\"], \"0$1\"]], \"0\"], BF: [\"226\", \"00\", \"[025-7]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[025-7]\"]]]], BG: [\"359\", \"00\", \"00800\\\\d{7}|[2-7]\\\\d{6,7}|[89]\\\\d{6,8}|2\\\\d{5}\", [6, 7, 8, 9, 12], [[\"(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"2\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"43[1-6]|70[1-9]\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:70|8)0\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"43[1-7]|7\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[48]|9[08]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]], \"0\"], BH: [\"973\", \"00\", \"[136-9]\\\\d{7}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[13679]|8[02-4679]\"]]]], BI: [\"257\", \"00\", \"(?:[267]\\\\d|31)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2367]\"]]]], BJ: [\"229\", \"00\", \"[24-689]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24-689]\"]]]], BL: [\"590\", \"00\", \"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\", [9], 0, \"0\", 0, 0, 0, 0, 0, [[\"590(?:2[7-9]|3[3-7]|5[12]|87)\\\\d{4}\"], [\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"], [\"80[0-5]\\\\d{6}\"], 0, 0, 0, 0, 0, [\"9(?:(?:395|76[018])\\\\d|475[0-5])\\\\d{4}\"]]], BM: [\"1\", \"011\", \"(?:441|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-9]\\\\d{6})$|1\", \"441$1\", 0, \"441\"], BN: [\"673\", \"00\", \"[2-578]\\\\d{6}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-578]\"]]]], BO: [\"591\", \"00(?:1\\\\d)?\", \"(?:[2-467]\\\\d\\\\d|8001)\\\\d{5}\", [8, 9], [[\"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"[23]|4[46]\"]], [\"(\\\\d{8})\", \"$1\", [\"[67]\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]]], \"0\", 0, \"0(1\\\\d)?\"], BQ: [\"599\", \"00\", \"(?:[34]1|7\\\\d)\\\\d{5}\", [7], 0, 0, 0, 0, 0, 0, \"[347]\"], BR: [\"55\", \"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)\", \"(?:[1-46-9]\\\\d\\\\d|5(?:[0-46-9]\\\\d|5[0-46-9]))\\\\d{8}|[1-9]\\\\d{9}|[3589]\\\\d{8}|[34]\\\\d{7}\", [8, 9, 10, 11], [[\"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"300|4(?:0[02]|37)\", \"4(?:02|37)0|[34]00\"]], [\"(\\\\d{3})(\\\\d{2,3})(\\\\d{4})\", \"$1 $2 $3\", [\"(?:[358]|90)0\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]\"], \"($1)\"], [\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1 $2-$3\", [\"[16][1-9]|[2-57-9]\"], \"($1)\"]], \"0\", 0, \"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\", \"$2\"], BS: [\"1\", \"011\", \"(?:242|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([3-8]\\\\d{6})$|1\", \"242$1\", 0, \"242\"], BT: [\"975\", \"00\", \"[17]\\\\d{7}|[2-8]\\\\d{6}\", [7, 8], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-68]|7[246]\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[67]|7\"]]]], BW: [\"267\", \"00\", \"(?:0800|(?:[37]|800)\\\\d)\\\\d{6}|(?:[2-6]\\\\d|90)\\\\d{5}\", [7, 8, 10], [[\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"90\"]], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[24-6]|3[15-9]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[37]\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"0\"]], [\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]]]], BY: [\"375\", \"810\", \"(?:[12]\\\\d|33|44|902)\\\\d{7}|8(?:0[0-79]\\\\d{5,7}|[1-7]\\\\d{9})|8(?:1[0-489]|[5-79]\\\\d)\\\\d{7}|8[1-79]\\\\d{6,7}|8[0-79]\\\\d{5}|8\\\\d{5}\", [6, 7, 8, 9, 10, 11], [[\"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"800\"], \"8 $1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2,4})\", \"$1 $2 $3\", [\"800\"], \"8 $1\"], [\"(\\\\d{4})(\\\\d{2})(\\\\d{3})\", \"$1 $2-$3\", [\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\", \"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"], \"8 0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"1(?:[56]|7[467])|2[1-3]\"], \"8 0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[1-4]\"], \"8 0$1\"], [\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"8 $1\"]], \"8\", 0, \"0|80?\", 0, 0, 0, 0, \"8~10\"], BZ: [\"501\", \"00\", \"(?:0800\\\\d|[2-8])\\\\d{6}\", [7, 11], [[\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-8]\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1-$2-$3-$4\", [\"0\"]]]], CA: [\"1\", \"011\", \"(?:[2-8]\\\\d|90)\\\\d{8}|3\\\\d{6}\", [7, 10], 0, \"1\", 0, 0, 0, 0, 0, [[\"(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|[26]8|3[178]|50|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\", [10]], [\"\", [10]], [\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", [10]], [\"900[2-9]\\\\d{6}\", [10]], [\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|(?:5(?:00|2[125-9]|33|44|66|77|88)|622)[2-9]\\\\d{6}\", [10]], 0, [\"310\\\\d{4}\", [7]], 0, [\"600[2-9]\\\\d{6}\", [10]]]], CC: [\"61\", \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\", \"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\", [6, 7, 8, 9, 10, 12], 0, \"0\", 0, \"([59]\\\\d{7})$|0\", \"8$1\", 0, 0, [[\"8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\\\d|70[23]|959))\\\\d{3}\", [9]], [\"4(?:(?:79|94)[01]|83[0-389])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[0-26-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\", [9]], [\"180(?:0\\\\d{3}|2)\\\\d{3}\", [7, 10]], [\"190[0-26]\\\\d{6}\", [10]], 0, 0, 0, 0, [\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\", [9]], [\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\", [6, 8, 10, 12]]], \"0011\"], CD: [\"243\", \"00\", \"[189]\\\\d{8}|[1-68]\\\\d{6}\", [7, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"88\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[1-6]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]], \"0\"], CF: [\"236\", \"00\", \"(?:[27]\\\\d{3}|8776)\\\\d{4}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[278]\"]]]], CG: [\"242\", \"00\", \"222\\\\d{6}|(?:0\\\\d|80)\\\\d{7}\", [9], [[\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[02]\"]]]], CH: [\"41\", \"00\", \"8\\\\d{11}|[2-9]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8[047]|90\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-79]|81\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"8\"], \"0$1\"]], \"0\"], CI: [\"225\", \"00\", \"[02]\\\\d{9}\", [10], [[\"(\\\\d{2})(\\\\d{2})(\\\\d)(\\\\d{5})\", \"$1 $2 $3 $4\", [\"2\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"0\"]]]], CK: [\"682\", \"00\", \"[2-578]\\\\d{4}\", [5], [[\"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"[2-578]\"]]]], CL: [\"56\", \"(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0\", \"12300\\\\d{6}|6\\\\d{9,10}|[2-9]\\\\d{8}\", [9, 10, 11], [[\"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"219\", \"2196\"], \"($1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"44\"]], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[1-36]\"], \"($1)\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"9[2-9]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])\"], \"($1)\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"60|8\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"60\"]]]], CM: [\"237\", \"00\", \"[26]\\\\d{8}|88\\\\d{6,7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"88\"]], [\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[26]|88\"]]]], CN: [\"86\", \"00|1(?:[12]\\\\d|79)\\\\d\\\\d00\", \"1[127]\\\\d{8,9}|2\\\\d{9}(?:\\\\d{2})?|[12]\\\\d{6,7}|86\\\\d{6}|(?:1[03-689]\\\\d|6)\\\\d{7,9}|(?:[3-579]\\\\d|8[0-57-9])\\\\d{6,9}\", [7, 8, 9, 10, 11, 12], [[\"(\\\\d{2})(\\\\d{5,6})\", \"$1 $2\", [\"(?:10|2[0-57-9])[19]\", \"(?:10|2[0-57-9])(?:10|9[56])\", \"10(?:10|9[56])|2[0-57-9](?:100|9[56])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]\", \"(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))[19]\", \"85[23](?:10|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:10|9[56])\", \"85[23](?:100|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100|9[56])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"(?:4|80)0\"]], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"10|2(?:[02-57-9]|1[1-9])\", \"10|2(?:[02-57-9]|1[1-9])\", \"10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{7,8})\", \"$1 $2\", [\"9\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"80\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-578]\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"1[3-9]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"[12]\"], \"0$1\", 1]], \"0\", 0, \"(1(?:[12]\\\\d|79)\\\\d\\\\d)|0\", 0, 0, 0, 0, \"00\"], CO: [\"57\", \"00(?:4(?:[14]4|56)|[579])\", \"(?:60\\\\d\\\\d|9101)\\\\d{6}|(?:1\\\\d|3)\\\\d{9}\", [10, 11], [[\"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"6\"], \"($1)\"], [\"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"3[0-357]|91\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{7})\", \"$1-$2-$3\", [\"1\"], \"0$1\", 0, \"$1 $2 $3\"]], \"0\", 0, \"0([3579]|4(?:[14]4|56))?\"], CR: [\"506\", \"00\", \"(?:8\\\\d|90)\\\\d{8}|(?:[24-8]\\\\d{3}|3005)\\\\d{4}\", [8, 10], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]|8[3-9]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[89]\"]]], 0, 0, \"(19(?:0[0-2468]|1[09]|20|66|77|99))\"], CU: [\"53\", \"119\", \"[27]\\\\d{6,7}|[34]\\\\d{5,7}|63\\\\d{6}|(?:5|8\\\\d\\\\d)\\\\d{7}\", [6, 7, 8, 10], [[\"(\\\\d{2})(\\\\d{4,6})\", \"$1 $2\", [\"2[1-4]|[34]\"], \"(0$1)\"], [\"(\\\\d)(\\\\d{6,7})\", \"$1 $2\", [\"7\"], \"(0$1)\"], [\"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"[56]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"8\"], \"0$1\"]], \"0\"], CV: [\"238\", \"0\", \"(?:[2-59]\\\\d\\\\d|800)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[2-589]\"]]]], CW: [\"599\", \"00\", \"(?:[34]1|60|(?:7|9\\\\d)\\\\d)\\\\d{5}\", [7, 8], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[3467]\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9[4-8]\"]]], 0, 0, 0, 0, 0, \"[69]\"], CX: [\"61\", \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\", \"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\", [6, 7, 8, 9, 10, 12], 0, \"0\", 0, \"([59]\\\\d{7})$|0\", \"8$1\", 0, 0, [[\"8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\\\d|7(?:0[01]|1[0-2])|958))\\\\d{3}\", [9]], [\"4(?:(?:79|94)[01]|83[0-389])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[0-26-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\", [9]], [\"180(?:0\\\\d{3}|2)\\\\d{3}\", [7, 10]], [\"190[0-26]\\\\d{6}\", [10]], 0, 0, 0, 0, [\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\", [9]], [\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\", [6, 8, 10, 12]]], \"0011\"], CY: [\"357\", \"00\", \"(?:[279]\\\\d|[58]0)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[257-9]\"]]]], CZ: [\"420\", \"00\", \"(?:[2-578]\\\\d|60)\\\\d{7}|9\\\\d{8,11}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-8]|9[015-7]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"96\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]]]], DE: [\"49\", \"00\", \"[2579]\\\\d{5,14}|49(?:[34]0|69|8\\\\d)\\\\d\\\\d?|49(?:37|49|60|7[089]|9\\\\d)\\\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\\\d{1,8}|(?:1|[368]\\\\d|4[0-8])\\\\d{3,13}|49(?:[015]\\\\d|2[13]|31|[46][1-8])\\\\d{1,9}\", [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [[\"(\\\\d{2})(\\\\d{3,13})\", \"$1 $2\", [\"3[02]|40|[68]9\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3,12})\", \"$1 $2\", [\"2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\", \"2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{2,11})\", \"$1 $2\", [\"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]\", \"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"138\"], \"0$1\"], [\"(\\\\d{5})(\\\\d{2,10})\", \"$1 $2\", [\"3\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5,11})\", \"$1 $2\", [\"181\"], \"0$1\"], [\"(\\\\d{3})(\\\\d)(\\\\d{4,10})\", \"$1 $2 $3\", [\"1(?:3|80)|9\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{7,8})\", \"$1 $2\", [\"1[67]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{7,12})\", \"$1 $2\", [\"8\"], \"0$1\"], [\"(\\\\d{5})(\\\\d{6})\", \"$1 $2\", [\"185\", \"1850\", \"18500\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{7})\", \"$1 $2\", [\"18[68]\"], \"0$1\"], [\"(\\\\d{5})(\\\\d{6})\", \"$1 $2\", [\"15[0568]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{7})\", \"$1 $2\", [\"15[1279]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{8})\", \"$1 $2\", [\"18\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{7,8})\", \"$1 $2 $3\", [\"1(?:6[023]|7)\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{2})(\\\\d{7})\", \"$1 $2 $3\", [\"15[279]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{8})\", \"$1 $2 $3\", [\"15\"], \"0$1\"]], \"0\"], DJ: [\"253\", \"00\", \"(?:2\\\\d|77)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[27]\"]]]], DK: [\"45\", \"00\", \"[2-9]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-9]\"]]]], DM: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|767|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-7]\\\\d{6})$|1\", \"767$1\", 0, \"767\"], DO: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, 0, 0, 0, \"8001|8[024]9\"], DZ: [\"213\", \"00\", \"(?:[1-4]|[5-79]\\\\d|80)\\\\d{7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[1-4]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"9\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-8]\"], \"0$1\"]], \"0\"], EC: [\"593\", \"00\", \"1\\\\d{9,10}|(?:[2-7]|9\\\\d)\\\\d{7}\", [8, 9, 10, 11], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"[2-7]\"], \"(0$1)\", 0, \"$1-$2-$3\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1\"]]], \"0\"], EE: [\"372\", \"00\", \"8\\\\d{9}|[4578]\\\\d{7}|(?:[3-8]\\\\d|90)\\\\d{5}\", [7, 8, 10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88\", \"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88\"]], [\"(\\\\d{4})(\\\\d{3,4})\", \"$1 $2\", [\"[45]|8(?:00|[1-49])\", \"[45]|8(?:00[1-9]|[1-49])\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]]]], EG: [\"20\", \"00\", \"[189]\\\\d{8,9}|[24-6]\\\\d{8}|[135]\\\\d{7}\", [8, 9, 10], [[\"(\\\\d)(\\\\d{7,8})\", \"$1 $2\", [\"[23]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{6,7})\", \"$1 $2\", [\"1[35]|[4-6]|8[2468]|9[235-7]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{8})\", \"$1 $2\", [\"1\"], \"0$1\"]], \"0\"], EH: [\"212\", \"00\", \"[5-8]\\\\d{8}\", [9], 0, \"0\", 0, 0, 0, 0, \"528[89]\"], ER: [\"291\", \"00\", \"[178]\\\\d{6}\", [7], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[178]\"], \"0$1\"]], \"0\"], ES: [\"34\", \"00\", \"[5-9]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]00\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-9]\"]]]], ET: [\"251\", \"00\", \"(?:11|[2-579]\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-579]\"], \"0$1\"]], \"0\"], FI: [\"358\", \"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\", \"[1-35689]\\\\d{4}|7\\\\d{10,11}|(?:[124-7]\\\\d|3[0-46-9])\\\\d{8}|[1-9]\\\\d{5,8}\", [5, 6, 7, 8, 9, 10, 11, 12], [[\"(\\\\d)(\\\\d{4,9})\", \"$1 $2\", [\"[2568][1-8]|3(?:0[1-9]|[1-9])|9\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3,7})\", \"$1 $2\", [\"[12]00|[368]|70[07-9]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4,8})\", \"$1 $2\", [\"[1245]|7[135]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{6,10})\", \"$1 $2\", [\"7\"], \"0$1\"]], \"0\", 0, 0, 0, 0, \"1[03-79]|[2-9]\", 0, \"00\"], FJ: [\"679\", \"0(?:0|52)\", \"45\\\\d{5}|(?:0800\\\\d|[235-9])\\\\d{6}\", [7, 11], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[235-9]|45\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], FK: [\"500\", \"00\", \"[2-7]\\\\d{4}\", [5]], FM: [\"691\", \"00\", \"(?:[39]\\\\d\\\\d|820)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[389]\"]]]], FO: [\"298\", \"00\", \"[2-9]\\\\d{5}\", [6], [[\"(\\\\d{6})\", \"$1\", [\"[2-9]\"]]], 0, 0, \"(10(?:01|[12]0|88))\"], FR: [\"33\", \"00\", \"[1-9]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0 $1\"], [\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[1-79]\"], \"0$1\"]], \"0\"], GA: [\"241\", \"00\", \"(?:[067]\\\\d|11)\\\\d{6}|[2-7]\\\\d{6}\", [7, 8], [[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-7]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"0\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"11|[67]\"], \"0$1\"]], 0, 0, \"0(11\\\\d{6}|60\\\\d{6}|61\\\\d{6}|6[256]\\\\d{6}|7[467]\\\\d{6})\", \"$1\"], GB: [\"44\", \"00\", \"[1-357-9]\\\\d{9}|[18]\\\\d{8}|8\\\\d{6}\", [7, 9, 10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"800\", \"8001\", \"80011\", \"800111\", \"8001111\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"845\", \"8454\", \"84546\", \"845464\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"800\"], \"0$1\"], [\"(\\\\d{5})(\\\\d{4,5})\", \"$1 $2\", [\"1(?:38|5[23]|69|76|94)\", \"1(?:(?:38|69)7|5(?:24|39)|768|946)\", \"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{5,6})\", \"$1 $2\", [\"1(?:[2-69][02-9]|[78])\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[25]|7(?:0|6[02-9])\", \"[25]|7(?:0|6(?:[03-9]|2[356]))\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"7\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1389]\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, [[\"(?:1(?:1(?:3(?:[0-58]\\\\d\\\\d|73[0235])|4(?:[0-5]\\\\d\\\\d|69[7-9]|70[0-79])|(?:(?:5[0-26-9]|[78][0-49])\\\\d|6(?:[0-4]\\\\d|50))\\\\d)|(?:2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)\\\\d|1(?:[0-7]\\\\d|8[0-2]))|(?:3(?:0\\\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\\\d)\\\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d{3})\\\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\\\d)|76\\\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[5-7]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}\", [9, 10]], [\"7(?:457[0-57-9]|700[01]|911[028])\\\\d{5}|7(?:[1-3]\\\\d\\\\d|4(?:[0-46-9]\\\\d|5[0-689])|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\\\d|8[02-9]|9[0-689])|8(?:[014-9]\\\\d|[23][0-8])|9(?:[024-9]\\\\d|1[02-9]|3[0-689]))\\\\d{6}\", [10]], [\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"], [\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[2-49]))\\\\d{7}|845464\\\\d\", [7, 10]], [\"70\\\\d{8}\", [10]], 0, [\"(?:3[0347]|55)\\\\d{8}\", [10]], [\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\", [10]], [\"56\\\\d{8}\", [10]]], 0, \" x\"], GD: [\"1\", \"011\", \"(?:473|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-9]\\\\d{6})$|1\", \"473$1\", 0, \"473\"], GE: [\"995\", \"00\", \"(?:[3-57]\\\\d\\\\d|800)\\\\d{6}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"70\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"32\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[57]\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[348]\"], \"0$1\"]], \"0\"], GF: [\"594\", \"00\", \"[56]94\\\\d{6}|(?:80|9\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[56]|9[47]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[89]\"], \"0$1\"]], \"0\"], GG: [\"44\", \"00\", \"(?:1481|[357-9]\\\\d{3})\\\\d{6}|8\\\\d{6}(?:\\\\d{2})?\", [7, 9, 10], 0, \"0\", 0, \"([25-9]\\\\d{5})$|0\", \"1481$1\", 0, 0, [[\"1481[25-9]\\\\d{5}\", [10]], [\"7(?:(?:781|839)\\\\d|911[17])\\\\d{5}\", [10]], [\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"], [\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[0-3]))\\\\d{7}|845464\\\\d\", [7, 10]], [\"70\\\\d{8}\", [10]], 0, [\"(?:3[0347]|55)\\\\d{8}\", [10]], [\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\", [10]], [\"56\\\\d{8}\", [10]]]], GH: [\"233\", \"00\", \"(?:[235]\\\\d{3}|800)\\\\d{5}\", [8, 9], [[\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"8\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[235]\"], \"0$1\"]], \"0\"], GI: [\"350\", \"00\", \"(?:[25]\\\\d|60)\\\\d{6}\", [8], [[\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"2\"]]]], GL: [\"299\", \"00\", \"(?:19|[2-689]\\\\d|70)\\\\d{4}\", [6], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"19|[2-9]\"]]]], GM: [\"220\", \"00\", \"[2-9]\\\\d{6}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]]]], GN: [\"224\", \"00\", \"722\\\\d{6}|(?:3|6\\\\d)\\\\d{7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"3\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[67]\"]]]], GP: [\"590\", \"00\", \"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[569]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, [[\"590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1-9]|5[3-579]|[68][0-689]|7[08]|9\\\\d)\\\\d{4}\"], [\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"], [\"80[0-5]\\\\d{6}\"], 0, 0, 0, 0, 0, [\"9(?:(?:395|76[018])\\\\d|475[0-5])\\\\d{4}\"]]], GQ: [\"240\", \"00\", \"222\\\\d{6}|(?:3\\\\d|55|[89]0)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[235]\"]], [\"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[89]\"]]]], GR: [\"30\", \"00\", \"5005000\\\\d{3}|8\\\\d{9,11}|(?:[269]\\\\d|70)\\\\d{8}\", [10, 11, 12], [[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"21|7\"]], [\"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2689]\"]], [\"(\\\\d{3})(\\\\d{3,4})(\\\\d{5})\", \"$1 $2 $3\", [\"8\"]]]], GT: [\"502\", \"00\", \"80\\\\d{6}|(?:1\\\\d{3}|[2-7])\\\\d{7}\", [8, 11], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-8]\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]]]], GU: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|671|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-9]\\\\d{6})$|1\", \"671$1\", 0, \"671\"], GW: [\"245\", \"00\", \"[49]\\\\d{8}|4\\\\d{6}\", [7, 9], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"40\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[49]\"]]]], GY: [\"592\", \"001\", \"(?:[2-8]\\\\d{3}|9008)\\\\d{3}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]]]], HK: [\"852\", \"00(?:30|5[09]|[126-9]?)\", \"8[0-46-9]\\\\d{6,7}|9\\\\d{4,7}|(?:[2-7]|9\\\\d{3})\\\\d{7}\", [5, 6, 7, 8, 9, 11], [[\"(\\\\d{3})(\\\\d{2,5})\", \"$1 $2\", [\"900\", \"9003\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]|8[1-4]|9(?:0[1-9]|[1-8])\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], HN: [\"504\", \"00\", \"8\\\\d{10}|[237-9]\\\\d{7}\", [8, 11], [[\"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[237-9]\"]]]], HR: [\"385\", \"00\", \"(?:[24-69]\\\\d|3[0-79])\\\\d{7}|80\\\\d{5,7}|[1-79]\\\\d{7}|6\\\\d{5,6}\", [6, 7, 8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"6[01]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[67]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-5]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]], \"0\"], HT: [\"509\", \"00\", \"(?:[2-489]\\\\d|55)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-589]\"]]]], HU: [\"36\", \"00\", \"[235-7]\\\\d{8}|[1-9]\\\\d{7}\", [8, 9], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"(06 $1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]\"], \"(06 $1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-9]\"], \"06 $1\"]], \"06\"], ID: [\"62\", \"00[89]\", \"(?:(?:00[1-9]|8\\\\d)\\\\d{4}|[1-36])\\\\d{6}|00\\\\d{10}|[1-9]\\\\d{8,10}|[2-9]\\\\d{7}\", [7, 8, 9, 10, 11, 12, 13], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"15\"]], [\"(\\\\d{2})(\\\\d{5,9})\", \"$1 $2\", [\"2[124]|[36]1\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{5,7})\", \"$1 $2\", [\"800\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5,8})\", \"$1 $2\", [\"[2-79]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{3,4})(\\\\d{3})\", \"$1-$2-$3\", [\"8[1-35-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{6,8})\", \"$1 $2\", [\"1\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"804\"], \"0$1\"], [\"(\\\\d{3})(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"80\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1-$2-$3\", [\"8\"], \"0$1\"]], \"0\"], IE: [\"353\", \"00\", \"(?:1\\\\d|[2569])\\\\d{6,8}|4\\\\d{6,9}|7\\\\d{8}|8\\\\d{8,9}\", [7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"2[24-9]|47|58|6[237-9]|9[35-9]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[45]0\"], \"(0$1)\"], [\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2569]|4[1-69]|7[14]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"70\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"81\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"4\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\"], IL: [\"972\", \"0(?:0|1[2-9])\", \"1\\\\d{6}(?:\\\\d{3,5})?|[57]\\\\d{8}|[1-489]\\\\d{7}\", [7, 8, 9, 10, 11, 12], [[\"(\\\\d{4})(\\\\d{3})\", \"$1-$2\", [\"125\"]], [\"(\\\\d{4})(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"121\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[2-489]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"12\"]], [\"(\\\\d{4})(\\\\d{6})\", \"$1-$2\", [\"159\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3-$4\", [\"1[7-9]\"]], [\"(\\\\d{3})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3-$4\", [\"15\"]]], \"0\"], IM: [\"44\", \"00\", \"1624\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\", [10], 0, \"0\", 0, \"([25-8]\\\\d{5})$|0\", \"1624$1\", 0, \"74576|(?:16|7[56])24\"], IN: [\"91\", \"00\", \"(?:000800|[2-9]\\\\d\\\\d)\\\\d{7}|1\\\\d{7,12}\", [8, 9, 10, 11, 12, 13], [[\"(\\\\d{8})\", \"$1\", [\"5(?:0|2[23]|3[03]|[67]1|88)\", \"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)\", \"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)\"], 0, 1], [\"(\\\\d{4})(\\\\d{4,5})\", \"$1 $2\", [\"180\", \"1800\"], 0, 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"140\"], 0, 1], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"11|2[02]|33|4[04]|79[1-7]|80[2-46]\", \"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])\", \"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]\", \"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]\", \"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]\"], \"0$1\", 1], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807\", \"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]\", \"1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\\\d|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]))[2-7]\"], \"0$1\", 1], [\"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"[6-9]\"], \"0$1\", 1], [\"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:6|8[06])\", \"1(?:6|8[06]0)\"], 0, 1], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"18\"], 0, 1]], \"0\"], IO: [\"246\", \"00\", \"3\\\\d{6}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"3\"]]]], IQ: [\"964\", \"00\", \"(?:1|7\\\\d\\\\d)\\\\d{7}|[2-6]\\\\d{7,8}\", [8, 9, 10], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-6]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], \"0\"], IR: [\"98\", \"00\", \"[1-9]\\\\d{9}|(?:[1-8]\\\\d\\\\d|9)\\\\d{3,4}\", [4, 5, 6, 7, 10], [[\"(\\\\d{4,5})\", \"$1\", [\"96\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4,5})\", \"$1 $2\", [\"(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-8]\"], \"0$1\"]], \"0\"], IS: [\"354\", \"00|1(?:0(?:01|[12]0)|100)\", \"(?:38\\\\d|[4-9])\\\\d{6}\", [7, 9], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[4-9]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"3\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], IT: [\"39\", \"00\", \"0\\\\d{5,10}|1\\\\d{8,10}|3(?:[0-8]\\\\d{7,10}|9\\\\d{7,8})|(?:55|70)\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?\", [6, 7, 8, 9, 10, 11], [[\"(\\\\d{2})(\\\\d{4,6})\", \"$1 $2\", [\"0[26]\"]], [\"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"0[13-57-9][0159]|8(?:03|4[17]|9[2-5])\", \"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))\"]], [\"(\\\\d{4})(\\\\d{2,6})\", \"$1 $2\", [\"0(?:[13-579][2-46-8]|8[236-8])\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"894\"]], [\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[26]|5\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1(?:44|[679])|[378]\"]], [\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[13-57-9][0159]|14\"]], [\"(\\\\d{2})(\\\\d{4})(\\\\d{5})\", \"$1 $2 $3\", [\"0[26]\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"3\"]]], 0, 0, 0, 0, 0, 0, [[\"0669[0-79]\\\\d{1,6}|0(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\\\d\\\\d|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\\\d|6[0-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7}\"], [\"3[1-9]\\\\d{8}|3[2-9]\\\\d{7}\", [9, 10]], [\"80(?:0\\\\d{3}|3)\\\\d{3}\", [6, 9]], [\"(?:0878\\\\d{3}|89(?:2\\\\d|3[04]|4(?:[0-4]|[5-9]\\\\d\\\\d)|5[0-4]))\\\\d\\\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\\\d{6}\", [6, 8, 9, 10]], [\"1(?:78\\\\d|99)\\\\d{6}\", [9, 10]], 0, 0, 0, [\"55\\\\d{8}\", [10]], [\"84(?:[08]\\\\d{3}|[17])\\\\d{3}\", [6, 9]]]], JE: [\"44\", \"00\", \"1534\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\", [10], 0, \"0\", 0, \"([0-24-8]\\\\d{5})$|0\", \"1534$1\", 0, 0, [[\"1534[0-24-8]\\\\d{5}\"], [\"7(?:(?:(?:50|82)9|937)\\\\d|7(?:00[378]|97[7-9]))\\\\d{5}\"], [\"80(?:07(?:35|81)|8901)\\\\d{4}\"], [\"(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\"], [\"701511\\\\d{4}\"], 0, [\"(?:3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\\\d{4})\\\\d{4}\"], [\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\"], [\"56\\\\d{8}\"]]], JM: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|658|900)\\\\d{7}\", [10], 0, \"1\", 0, 0, 0, 0, \"658|876\"], JO: [\"962\", \"00\", \"(?:(?:[2689]|7\\\\d)\\\\d|32|53)\\\\d{6}\", [8, 9], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2356]|87\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"70\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], \"0\"], JP: [\"81\", \"010\", \"00[1-9]\\\\d{6,14}|[257-9]\\\\d{9}|(?:00|[1-9]\\\\d\\\\d)\\\\d{6}\", [8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"(?:12|57|99)0\"], \"0$1\"], [\"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51)|9(?:80|9[16])\", \"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\", \"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"60\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[36]|4(?:2[09]|7[01])\", \"[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[0459]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[26-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])\", \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9]|9[29])|5(?:2|3(?:[045]|9[0-8])|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|3(?:[29]|60)|49|51|6(?:[0-24]|36|5[0-3589]|7[23]|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]\", \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3(?:[045]|9(?:[0-58]|6[4-9]|7[0-35689]))|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|60|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[2-57-9]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|7(?:2[2-468]|3[78])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"[14]|[289][2-9]|5[3-9]|7[2-4679]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"800\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[257-9]\"], \"0$1\"]], \"0\", 0, \"(000[259]\\\\d{6})$|(?:(?:003768)0?)|0\", \"$1\"], KE: [\"254\", \"000\", \"(?:[17]\\\\d\\\\d|900)\\\\d{6}|(?:2|80)0\\\\d{6,7}|[4-6]\\\\d{6,8}\", [7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{5,7})\", \"$1 $2\", [\"[24-6]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[17]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]], \"0\"], KG: [\"996\", \"00\", \"8\\\\d{9}|[235-9]\\\\d{8}\", [9, 10], [[\"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"3(?:1[346]|[24-79])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[235-79]|88\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{2,3})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\"], KH: [\"855\", \"00[14-9]\", \"1\\\\d{9}|[1-9]\\\\d{7,8}\", [8, 9, 10], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-9]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]], \"0\"], KI: [\"686\", \"00\", \"(?:[37]\\\\d|6[0-79])\\\\d{6}|(?:[2-48]\\\\d|50)\\\\d{3}\", [5, 8], 0, \"0\"], KM: [\"269\", \"00\", \"[3478]\\\\d{6}\", [7], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[3478]\"]]]], KN: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-7]\\\\d{6})$|1\", \"869$1\", 0, \"869\"], KP: [\"850\", \"00|99\", \"85\\\\d{6}|(?:19\\\\d|[2-7])\\\\d{7}\", [8, 10], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-7]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"]], \"0\"], KR: [\"82\", \"00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))\", \"00[1-9]\\\\d{8,11}|(?:[12]|5\\\\d{3})\\\\d{7}|[13-6]\\\\d{9}|(?:[1-6]\\\\d|80)\\\\d{7}|[3-6]\\\\d{4,5}|(?:00|7)0\\\\d{8}\", [5, 6, 8, 9, 10, 11, 12, 13, 14], [[\"(\\\\d{2})(\\\\d{3,4})\", \"$1-$2\", [\"(?:3[1-3]|[46][1-4]|5[1-5])1\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"1\"]], [\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"2\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"60|8\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"[1346]|5[1-5]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1-$2-$3\", [\"5\"], \"0$1\"]], \"0\", 0, \"0(8(?:[1-46-8]|5\\\\d\\\\d))?\"], KW: [\"965\", \"00\", \"18\\\\d{5}|(?:[2569]\\\\d|41)\\\\d{6}\", [7, 8], [[\"(\\\\d{4})(\\\\d{3,4})\", \"$1 $2\", [\"[169]|2(?:[235]|4[1-35-9])|52\"]], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[245]\"]]]], KY: [\"1\", \"011\", \"(?:345|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-9]\\\\d{6})$|1\", \"345$1\", 0, \"345\"], KZ: [\"7\", \"810\", \"(?:33622|8\\\\d{8})\\\\d{5}|[78]\\\\d{9}\", [10, 14], 0, \"8\", 0, 0, 0, 0, \"33|7\", 0, \"8~10\"], LA: [\"856\", \"00\", \"[23]\\\\d{9}|3\\\\d{8}|(?:[235-8]\\\\d|41)\\\\d{6}\", [8, 9, 10], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2[13]|3[14]|[4-8]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"30[013-9]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"[23]\"], \"0$1\"]], \"0\"], LB: [\"961\", \"00\", \"[27-9]\\\\d{7}|[13-9]\\\\d{6}\", [7, 8], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[27-9]\"]]], \"0\"], LC: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|758|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-8]\\\\d{6})$|1\", \"758$1\", 0, \"758\"], LI: [\"423\", \"00\", \"[68]\\\\d{8}|(?:[2378]\\\\d|90)\\\\d{5}\", [7, 9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[2379]|8(?:0[09]|7)\", \"[2379]|8(?:0(?:02|9)|7)\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"69\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"]]], \"0\", 0, \"(1001)|0\"], LK: [\"94\", \"00\", \"[1-9]\\\\d{8}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[1-689]\"], \"0$1\"]], \"0\"], LR: [\"231\", \"00\", \"(?:[25]\\\\d|33|77|88)\\\\d{7}|(?:2\\\\d|[4-6])\\\\d{6}\", [7, 8, 9], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[4-6]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[23578]\"], \"0$1\"]], \"0\"], LS: [\"266\", \"00\", \"(?:[256]\\\\d\\\\d|800)\\\\d{5}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2568]\"]]]], LT: [\"370\", \"00\", \"(?:[3469]\\\\d|52|[78]0)\\\\d{6}\", [8], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"52[0-7]\"], \"(8-$1)\", 1], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[7-9]\"], \"8 $1\", 1], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"37|4(?:[15]|6[1-8])\"], \"(8-$1)\", 1], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[3-6]\"], \"(8-$1)\", 1]], \"8\", 0, \"[08]\"], LU: [\"352\", \"00\", \"35[013-9]\\\\d{4,8}|6\\\\d{8}|35\\\\d{2,4}|(?:[2457-9]\\\\d|3[0-46-9])\\\\d{2,9}\", [4, 5, 6, 7, 8, 9, 10, 11], [[\"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"20[2-689]\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\", \"$1 $2 $3 $4\", [\"2(?:[0367]|4[3-8])\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"80[01]|90[015]\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"20\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\", \"$1 $2 $3 $4 $5\", [\"2(?:[0367]|4[3-8])\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,5})\", \"$1 $2 $3 $4\", [\"[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]\"]]], 0, 0, \"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\\\d)\"], LV: [\"371\", \"00\", \"(?:[268]\\\\d|90)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[269]|8[01]\"]]]], LY: [\"218\", \"00\", \"[2-9]\\\\d{8}\", [9], [[\"(\\\\d{2})(\\\\d{7})\", \"$1-$2\", [\"[2-9]\"], \"0$1\"]], \"0\"], MA: [\"212\", \"00\", \"[5-8]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5[45]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{5})\", \"$1-$2\", [\"5(?:2[2-489]|3[5-9]|9)|8(?:0[89]|92)\", \"5(?:2(?:[2-49]|8[235-9])|3[5-9]|9)|8(?:0[89]|92)\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1-$2\", [\"8\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{6})\", \"$1-$2\", [\"[5-7]\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, [[\"5(?:2(?:[0-25-79]\\\\d|3[1-578]|4[02-46-8]|8[0235-7])|3(?:[0-47]\\\\d|5[02-9]|6[02-8]|8[014-9]|9[3-9])|(?:4[067]|5[03])\\\\d)\\\\d{5}\"], [\"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[0167]\\\\d|2[0-2]|5[01]|8[0-3]))\\\\d{6}\"], [\"80[0-7]\\\\d{6}\"], [\"89\\\\d{7}\"], 0, 0, 0, 0, [\"(?:592(?:4[0-2]|93)|80[89]\\\\d\\\\d)\\\\d{4}\"]]], MC: [\"377\", \"00\", \"(?:[3489]|6\\\\d)\\\\d{7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"4\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[389]\"]], [\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"6\"], \"0$1\"]], \"0\"], MD: [\"373\", \"00\", \"(?:[235-7]\\\\d|[89]0)\\\\d{6}\", [8], [[\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"22|3\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[25-7]\"], \"0$1\"]], \"0\"], ME: [\"382\", \"00\", \"(?:20|[3-79]\\\\d)\\\\d{6}|80\\\\d{6,7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-9]\"], \"0$1\"]], \"0\"], MF: [\"590\", \"00\", \"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\", [9], 0, \"0\", 0, 0, 0, 0, 0, [[\"590(?:0[079]|[14]3|[27][79]|3[03-7]|5[0-268]|87)\\\\d{4}\"], [\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"], [\"80[0-5]\\\\d{6}\"], 0, 0, 0, 0, 0, [\"9(?:(?:395|76[018])\\\\d|475[0-5])\\\\d{4}\"]]], MG: [\"261\", \"00\", \"[23]\\\\d{8}\", [9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[23]\"], \"0$1\"]], \"0\", 0, \"([24-9]\\\\d{6})$|0\", \"20$1\"], MH: [\"692\", \"011\", \"329\\\\d{4}|(?:[256]\\\\d|45)\\\\d{5}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-6]\"]]], \"1\"], MK: [\"389\", \"00\", \"[2-578]\\\\d{7}\", [8], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2|34[47]|4(?:[37]7|5[47]|64)\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[347]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[58]\"], \"0$1\"]], \"0\"], ML: [\"223\", \"00\", \"[24-9]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24-9]\"]]]], MM: [\"95\", \"00\", \"1\\\\d{5,7}|95\\\\d{6}|(?:[4-7]|9[0-46-9])\\\\d{6,8}|(?:2|8\\\\d)\\\\d{5,8}\", [6, 7, 8, 9, 10], [[\"(\\\\d)(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"16|2\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[12]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[4-7]|8[1-35]\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{4,6})\", \"$1 $2 $3\", [\"9(?:2[0-4]|[35-9]|4[137-9])\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"92\"], \"0$1\"], [\"(\\\\d)(\\\\d{5})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]], \"0\"], MN: [\"976\", \"001\", \"[12]\\\\d{7,9}|[5-9]\\\\d{7}\", [8, 9, 10], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[12]1\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[5-9]\"]], [\"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"[12]2[1-3]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{5,6})\", \"$1 $2\", [\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])\", \"[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]\"], \"0$1\"], [\"(\\\\d{5})(\\\\d{4,5})\", \"$1 $2\", [\"[12]\"], \"0$1\"]], \"0\"], MO: [\"853\", \"00\", \"0800\\\\d{3}|(?:28|[68]\\\\d)\\\\d{6}\", [7, 8], [[\"(\\\\d{4})(\\\\d{3})\", \"$1 $2\", [\"0\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[268]\"]]]], MP: [\"1\", \"011\", \"[58]\\\\d{9}|(?:67|90)0\\\\d{7}\", [10], 0, \"1\", 0, \"([2-9]\\\\d{6})$|1\", \"670$1\", 0, \"670\"], MQ: [\"596\", \"00\", \"596\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[569]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\"], MR: [\"222\", \"00\", \"(?:[2-4]\\\\d\\\\d|800)\\\\d{5}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-48]\"]]]], MS: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|664|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([34]\\\\d{6})$|1\", \"664$1\", 0, \"664\"], MT: [\"356\", \"00\", \"3550\\\\d{4}|(?:[2579]\\\\d\\\\d|800)\\\\d{5}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2357-9]\"]]]], MU: [\"230\", \"0(?:0|[24-7]0|3[03])\", \"(?:[57]|8\\\\d\\\\d)\\\\d{7}|[2-468]\\\\d{6}\", [7, 8, 10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-46]|8[013]\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[57]\"]], [\"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"8\"]]], 0, 0, 0, 0, 0, 0, 0, \"020\"], MV: [\"960\", \"0(?:0|19)\", \"(?:800|9[0-57-9]\\\\d)\\\\d{7}|[34679]\\\\d{6}\", [7, 10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[34679]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], MW: [\"265\", \"00\", \"(?:[1289]\\\\d|31|77)\\\\d{7}|1\\\\d{6}\", [7, 9], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[2-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[137-9]\"], \"0$1\"]], \"0\"], MX: [\"52\", \"0[09]\", \"1(?:(?:[27]2|44|87|99)[1-9]|65[0-689])\\\\d{7}|(?:1(?:[01]\\\\d|2[13-9]|[35][1-9]|4[0-35-9]|6[0-46-9]|7[013-9]|8[1-69]|9[1-8])|[2-9]\\\\d)\\\\d{8}\", [10, 11], [[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"33|5[56]|81\"], 0, 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-9]\"], 0, 1], [\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$2 $3 $4\", [\"1(?:33|5[56]|81)\"], 0, 1], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$2 $3 $4\", [\"1\"], 0, 1]], \"01\", 0, \"0(?:[12]|4[45])|1\", 0, 0, 0, 0, \"00\"], MY: [\"60\", \"00\", \"1\\\\d{8,9}|(?:3\\\\d|[4-9])\\\\d{7}\", [8, 9, 10], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"[4-79]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1-$2 $3\", [\"1(?:[02469]|[378][1-9]|53)|8\", \"1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1-$2 $3\", [\"3\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3-$4\", [\"1(?:[367]|80)\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"15\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2 $3\", [\"1\"], \"0$1\"]], \"0\"], MZ: [\"258\", \"00\", \"(?:2|8\\\\d)\\\\d{7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2|8[2-79]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]]]], NA: [\"264\", \"00\", \"[68]\\\\d{7,8}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"88\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"6\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"87\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]], \"0\"], NC: [\"687\", \"00\", \"(?:050|[2-57-9]\\\\d\\\\d)\\\\d{3}\", [6], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1.$2.$3\", [\"[02-57-9]\"]]]], NE: [\"227\", \"00\", \"[027-9]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"08\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[089]|2[013]|7[047]\"]]]], NF: [\"672\", \"00\", \"[13]\\\\d{5}\", [6], [[\"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"1[0-3]\"]], [\"(\\\\d)(\\\\d{5})\", \"$1 $2\", [\"[13]\"]]], 0, 0, \"([0-258]\\\\d{4})$\", \"3$1\"], NG: [\"234\", \"009\", \"(?:[124-7]|9\\\\d{3})\\\\d{6}|[1-9]\\\\d{7}|[78]\\\\d{9,13}\", [7, 8, 10, 11, 12, 13, 14], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"78\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[12]|9(?:0[3-9]|[1-9])\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[3-7]|8[2-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[7-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5})(\\\\d{5,6})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"]], \"0\"], NI: [\"505\", \"00\", \"(?:1800|[25-8]\\\\d{3})\\\\d{4}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[125-8]\"]]]], NL: [\"31\", \"00\", \"(?:[124-7]\\\\d\\\\d|3(?:[02-9]\\\\d|1[0-8]))\\\\d{6}|8\\\\d{6,9}|9\\\\d{6,10}|1\\\\d{4,5}\", [5, 6, 7, 8, 9, 10, 11], [[\"(\\\\d{3})(\\\\d{4,7})\", \"$1 $2\", [\"[89]0\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"66\"], \"0$1\"], [\"(\\\\d)(\\\\d{8})\", \"$1 $2\", [\"6\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-578]|91\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]], \"0\"], NO: [\"47\", \"00\", \"(?:0|[2-9]\\\\d{3})\\\\d{4}\", [5, 8], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-79]\"]]], 0, 0, 0, 0, 0, \"[02-689]|7[0-8]\"], NP: [\"977\", \"00\", \"(?:1\\\\d|9)\\\\d{9}|[1-9]\\\\d{7}\", [8, 10, 11], [[\"(\\\\d)(\\\\d{7})\", \"$1-$2\", [\"1[2-6]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{6})\", \"$1-$2\", [\"1[01]|[2-8]|9(?:[1-59]|[67][2-6])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{7})\", \"$1-$2\", [\"9\"]]], \"0\"], NR: [\"674\", \"00\", \"(?:444|(?:55|8\\\\d)\\\\d|666)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[4-68]\"]]]], NU: [\"683\", \"00\", \"(?:[4-7]|888\\\\d)\\\\d{3}\", [4, 7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"8\"]]]], NZ: [\"64\", \"0(?:0|161)\", \"[1289]\\\\d{9}|50\\\\d{5}(?:\\\\d{2,3})?|[27-9]\\\\d{7,8}|(?:[34]\\\\d|6[0-35-9])\\\\d{6}|8\\\\d{4,6}\", [5, 6, 7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{3,8})\", \"$1 $2\", [\"8[1-79]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"50[036-8]|8|90\", \"50(?:[0367]|88)|8|90\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"24|[346]|7[2-57-9]|9[2-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2(?:10|74)|[589]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1|2[028]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\", \"$1 $2 $3\", [\"2(?:[169]|7[0-35-9])|7\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, 0, \"00\"], OM: [\"968\", \"00\", \"(?:1505|[279]\\\\d{3}|500)\\\\d{4}|800\\\\d{5,6}\", [7, 8, 9], [[\"(\\\\d{3})(\\\\d{4,6})\", \"$1 $2\", [\"[58]\"]], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"2\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[179]\"]]]], PA: [\"507\", \"00\", \"(?:00800|8\\\\d{3})\\\\d{6}|[68]\\\\d{7}|[1-57-9]\\\\d{6}\", [7, 8, 10, 11], [[\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[1-57-9]\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[68]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]]]], PE: [\"51\", \"00|19(?:1[124]|77|90)00\", \"(?:[14-8]|9\\\\d)\\\\d{7}\", [8, 9], [[\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"80\"], \"(0$1)\"], [\"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"1\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[4-8]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"]]], \"0\", 0, 0, 0, 0, 0, 0, \"00\", \" Anexo \"], PF: [\"689\", \"00\", \"4\\\\d{5}(?:\\\\d{2})?|8\\\\d{7,8}\", [6, 8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"44\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"4|8[7-9]\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]]]], PG: [\"675\", \"00|140[1-3]\", \"(?:180|[78]\\\\d{3})\\\\d{4}|(?:[2-589]\\\\d|64)\\\\d{5}\", [7, 8], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"18|[2-69]|85\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[78]\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], PH: [\"63\", \"00\", \"(?:[2-7]|9\\\\d)\\\\d{8}|2\\\\d{5}|(?:1800|8)\\\\d{7,9}\", [6, 8, 9, 10, 11, 12, 13], [[\"(\\\\d)(\\\\d{5})\", \"$1 $2\", [\"2\"], \"(0$1)\"], [\"(\\\\d{4})(\\\\d{4,6})\", \"$1 $2\", [\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2\", \"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"], \"(0$1)\"], [\"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"346|4(?:27|9[35])|883\", \"3469|4(?:279|9(?:30|56))|8834\"], \"(0$1)\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-7]|8[2-8]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [\"(\\\\d{4})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"1\"]]], \"0\"], PK: [\"92\", \"00\", \"122\\\\d{6}|[24-8]\\\\d{10,11}|9(?:[013-9]\\\\d{8,10}|2(?:[01]\\\\d\\\\d|2(?:[06-8]\\\\d|1[01]))\\\\d{7})|(?:[2-8]\\\\d{3}|92(?:[0-7]\\\\d|8[1-9]))\\\\d{6}|[24-9]\\\\d{8}|[89]\\\\d{7}\", [8, 9, 10, 11, 12], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,7})\", \"$1 $2 $3\", [\"[89]0\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"1\"]], [\"(\\\\d{3})(\\\\d{6,7})\", \"$1 $2\", [\"2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])\", \"9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{7,8})\", \"$1 $2\", [\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"], \"(0$1)\"], [\"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"58\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"3\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"[24-9]\"], \"(0$1)\"]], \"0\"], PL: [\"48\", \"00\", \"(?:6|8\\\\d\\\\d)\\\\d{7}|[1-9]\\\\d{6}(?:\\\\d{2})?|[26]\\\\d{5}\", [6, 7, 8, 9, 10], [[\"(\\\\d{5})\", \"$1\", [\"19\"]], [\"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"11|20|64\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1\", \"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"64\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[2-8]|[2-7]|8[1-79]|9[145]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"8\"]]]], PM: [\"508\", \"00\", \"[45]\\\\d{5}|(?:708|80\\\\d)\\\\d{6}\", [6, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[45]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\"], PR: [\"1\", \"011\", \"(?:[589]\\\\d\\\\d|787)\\\\d{7}\", [10], 0, \"1\", 0, 0, 0, 0, \"787|939\"], PS: [\"970\", \"00\", \"[2489]2\\\\d{6}|(?:1\\\\d|5)\\\\d{8}\", [8, 9, 10], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2489]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]], \"0\"], PT: [\"351\", \"00\", \"1693\\\\d{5}|(?:[26-9]\\\\d|30)\\\\d{7}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2[12]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"16|[236-9]\"]]]], PW: [\"680\", \"01[12]\", \"(?:[24-8]\\\\d\\\\d|345|900)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]]]], PY: [\"595\", \"00\", \"59\\\\d{4,6}|9\\\\d{5,10}|(?:[2-46-8]\\\\d|5[0-8])\\\\d{4,7}\", [6, 7, 8, 9, 10, 11], [[\"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"[2-9]0\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{4,5})\", \"$1 $2\", [\"2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"87\"]], [\"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"9(?:[5-79]|8[1-6])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-8]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"]]], \"0\"], QA: [\"974\", \"00\", \"800\\\\d{4}|(?:2|800)\\\\d{6}|(?:0080|[3-7])\\\\d{7}\", [7, 8, 9, 11], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"2[16]|8\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[3-7]\"]]]], RE: [\"262\", \"00\", \"(?:26|[689]\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2689]\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, [[\"26(?:2\\\\d\\\\d|3(?:0\\\\d|1[0-6]))\\\\d{4}\"], [\"69(?:2\\\\d\\\\d|3(?:[06][0-6]|1[013]|2[0-2]|3[0-39]|4\\\\d|5[0-5]|7[0-37]|8[0-8]|9[0-479]))\\\\d{4}\"], [\"80\\\\d{7}\"], [\"89[1-37-9]\\\\d{6}\"], 0, 0, 0, 0, [\"9(?:399[0-3]|479[0-5]|76(?:2[27]|3[0-37]))\\\\d{4}\"], [\"8(?:1[019]|2[0156]|84|90)\\\\d{6}\"]]], RO: [\"40\", \"00\", \"(?:[2378]\\\\d|62|90)\\\\d{7}|[23]\\\\d{5}\", [6, 9], [[\"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"2[3-6]\", \"2[3-6]\\\\d9\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"219|31\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[23]1\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[236-9]\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, 0, 0, \" int \"], RS: [\"381\", \"00\", \"38[02-9]\\\\d{6,9}|6\\\\d{7,9}|90\\\\d{4,8}|38\\\\d{5,6}|(?:7\\\\d\\\\d|800)\\\\d{3,9}|(?:[12]\\\\d|3[0-79])\\\\d{5,10}\", [6, 7, 8, 9, 10, 11, 12], [[\"(\\\\d{3})(\\\\d{3,9})\", \"$1 $2\", [\"(?:2[389]|39)0|[7-9]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{5,10})\", \"$1 $2\", [\"[1-36]\"], \"0$1\"]], \"0\"], RU: [\"7\", \"810\", \"8\\\\d{13}|[347-9]\\\\d{9}\", [10, 14], [[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"7(?:1[0-8]|2[1-9])\", \"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))\", \"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2\"], \"8 ($1)\", 1], [\"(\\\\d{5})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"7(?:1[0-68]|2[1-9])\", \"7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))\", \"7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]\"], \"8 ($1)\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"8 ($1)\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[349]|8(?:[02-7]|1[1-8])\"], \"8 ($1)\", 1], [\"(\\\\d{4})(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"8\"], \"8 ($1)\"]], \"8\", 0, 0, 0, 0, \"3[04-689]|[489]\", 0, \"8~10\"], RW: [\"250\", \"00\", \"(?:06|[27]\\\\d\\\\d|[89]00)\\\\d{6}\", [8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"0\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[7-9]\"], \"0$1\"]], \"0\"], SA: [\"966\", \"00\", \"92\\\\d{7}|(?:[15]|8\\\\d)\\\\d{8}\", [9, 10], [[\"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"9\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"81\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]]], \"0\"], SB: [\"677\", \"0[01]\", \"(?:[1-6]|[7-9]\\\\d\\\\d)\\\\d{4}\", [5, 7], [[\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"7|8[4-9]|9(?:[1-8]|9[0-8])\"]]]], SC: [\"248\", \"010|0[0-2]\", \"800\\\\d{4}|(?:[249]\\\\d|64)\\\\d{5}\", [7], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[246]|9[57]\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], SD: [\"249\", \"00\", \"[19]\\\\d{8}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[19]\"], \"0$1\"]], \"0\"], SE: [\"46\", \"00\", \"(?:[26]\\\\d\\\\d|9)\\\\d{9}|[1-9]\\\\d{8}|[1-689]\\\\d{7}|[1-4689]\\\\d{6}|2\\\\d{5}\", [6, 7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})\", \"$1-$2 $3\", [\"20\"], \"0$1\", 0, \"$1 $2 $3\"], [\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"9(?:00|39|44|9)\"], \"0$1\", 0, \"$1 $2\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})\", \"$1-$2 $3\", [\"[12][136]|3[356]|4[0246]|6[03]|90[1-9]\"], \"0$1\", 0, \"$1 $2 $3\"], [\"(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"8\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\", \"$1-$2 $3\", [\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"], \"0$1\", 0, \"$1 $2 $3\"], [\"(\\\\d{3})(\\\\d{2,3})(\\\\d{3})\", \"$1-$2 $3\", [\"9(?:00|39|44)\"], \"0$1\", 0, \"$1 $2 $3\"], [\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"10|7\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"8\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1-$2 $3 $4\", [\"9\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4 $5\", [\"[26]\"], \"0$1\", 0, \"$1 $2 $3 $4 $5\"]], \"0\"], SG: [\"65\", \"0[0-3]\\\\d\", \"(?:(?:1\\\\d|8)\\\\d\\\\d|7000)\\\\d{7}|[3689]\\\\d{7}\", [8, 10, 11], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[369]|8(?:0[1-8]|[1-9])\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]], [\"(\\\\d{4})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]]]], SH: [\"290\", \"00\", \"(?:[256]\\\\d|8)\\\\d{3}\", [4, 5], 0, 0, 0, 0, 0, 0, \"[256]\"], SI: [\"386\", \"00|10(?:22|66|88|99)\", \"[1-7]\\\\d{7}|8\\\\d{4,7}|90\\\\d{4,6}\", [5, 6, 7, 8], [[\"(\\\\d{2})(\\\\d{3,6})\", \"$1 $2\", [\"8[09]|9\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"59|8\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[37][01]|4[0139]|51|6\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[1-57]\"], \"(0$1)\"]], \"0\", 0, 0, 0, 0, 0, 0, \"00\"], SJ: [\"47\", \"00\", \"0\\\\d{4}|(?:[489]\\\\d|79)\\\\d{6}\", [5, 8], 0, 0, 0, 0, 0, 0, \"79\"], SK: [\"421\", \"00\", \"[2-689]\\\\d{8}|[2-59]\\\\d{6}|[2-5]\\\\d{5}\", [6, 7, 9], [[\"(\\\\d)(\\\\d{2})(\\\\d{3,4})\", \"$1 $2 $3\", [\"21\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[3-5][1-8]1\", \"[3-5][1-8]1[67]\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"2\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[689]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"[3-5]\"], \"0$1\"]], \"0\"], SL: [\"232\", \"00\", \"(?:[237-9]\\\\d|66)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[236-9]\"], \"(0$1)\"]], \"0\"], SM: [\"378\", \"00\", \"(?:0549|[5-7]\\\\d)\\\\d{6}\", [8, 10], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-7]\"]], [\"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"0\"]]], 0, 0, \"([89]\\\\d{5})$\", \"0549$1\"], SN: [\"221\", \"00\", \"(?:[378]\\\\d|93)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[379]\"]]]], SO: [\"252\", \"00\", \"[346-9]\\\\d{8}|[12679]\\\\d{7}|[1-5]\\\\d{6}|[1348]\\\\d{5}\", [6, 7, 8, 9], [[\"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"8[125]\"]], [\"(\\\\d{6})\", \"$1\", [\"[134]\"]], [\"(\\\\d)(\\\\d{6})\", \"$1 $2\", [\"[15]|2[0-79]|3[0-46-8]|4[0-7]\"]], [\"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"(?:2|90)4|[67]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[348]|64|79|90\"]], [\"(\\\\d{2})(\\\\d{5,7})\", \"$1 $2\", [\"1|28|6[0-35-9]|77|9[2-9]\"]]], \"0\"], SR: [\"597\", \"00\", \"(?:[2-5]|68|[78]\\\\d)\\\\d{5}\", [6, 7], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"56\"]], [\"(\\\\d{3})(\\\\d{3})\", \"$1-$2\", [\"[2-5]\"]], [\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[6-8]\"]]]], SS: [\"211\", \"00\", \"[19]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[19]\"], \"0$1\"]], \"0\"], ST: [\"239\", \"00\", \"(?:22|9\\\\d)\\\\d{5}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[29]\"]]]], SV: [\"503\", \"00\", \"[267]\\\\d{7}|[89]00\\\\d{4}(?:\\\\d{4})?\", [7, 8, 11], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[89]\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[267]\"]], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"]]]], SX: [\"1\", \"011\", \"7215\\\\d{6}|(?:[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"(5\\\\d{6})$|1\", \"721$1\", 0, \"721\"], SY: [\"963\", \"00\", \"[1-39]\\\\d{8}|[1-5]\\\\d{7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-5]\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\", 1]], \"0\"], SZ: [\"268\", \"00\", \"0800\\\\d{4}|(?:[237]\\\\d|900)\\\\d{6}\", [8, 9], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[0237]\"]], [\"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"9\"]]]], TA: [\"290\", \"00\", \"8\\\\d{3}\", [4], 0, 0, 0, 0, 0, 0, \"8\"], TC: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|649|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-479]\\\\d{6})$|1\", \"649$1\", 0, \"649\"], TD: [\"235\", \"00|16\", \"(?:22|[69]\\\\d|77)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2679]\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], TG: [\"228\", \"00\", \"[279]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[279]\"]]]], TH: [\"66\", \"00[1-9]\", \"(?:001800|[2-57]|[689]\\\\d)\\\\d{7}|1\\\\d{7,9}\", [8, 9, 10, 13], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[13-9]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]], \"0\"], TJ: [\"992\", \"810\", \"[0-57-9]\\\\d{8}\", [9], [[\"(\\\\d{6})(\\\\d)(\\\\d{2})\", \"$1 $2 $3\", [\"331\", \"3317\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"44[02-479]|[34]7\"]], [\"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1 $2 $3\", [\"3[1-5]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[0-57-9]\"]]], 0, 0, 0, 0, 0, 0, 0, \"8~10\"], TK: [\"690\", \"00\", \"[2-47]\\\\d{3,6}\", [4, 5, 6, 7]], TL: [\"670\", \"00\", \"7\\\\d{7}|(?:[2-47]\\\\d|[89]0)\\\\d{5}\", [7, 8], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-489]|70\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"7\"]]]], TM: [\"993\", \"810\", \"[1-6]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"12\"], \"(8 $1)\"], [\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[1-5]\"], \"(8 $1)\"], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"6\"], \"8 $1\"]], \"8\", 0, 0, 0, 0, 0, 0, \"8~10\"], TN: [\"216\", \"00\", \"[2-57-9]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-57-9]\"]]]], TO: [\"676\", \"00\", \"(?:0800|(?:[5-8]\\\\d\\\\d|999)\\\\d)\\\\d{3}|[2-8]\\\\d{4}\", [5, 7], [[\"(\\\\d{2})(\\\\d{3})\", \"$1-$2\", [\"[2-4]|50|6[09]|7[0-24-69]|8[05]\"]], [\"(\\\\d{4})(\\\\d{3})\", \"$1 $2\", [\"0\"]], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[5-9]\"]]]], TR: [\"90\", \"00\", \"4\\\\d{6}|8\\\\d{11,12}|(?:[2-58]\\\\d\\\\d|900)\\\\d{7}\", [7, 10, 12, 13], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"512|8[01589]|90\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5(?:[0-59]|61)\", \"5(?:[0-59]|61[06])\", \"5(?:[0-59]|61[06]1)\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24][1-8]|3[1-9]\"], \"(0$1)\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{6,7})\", \"$1 $2 $3\", [\"80\"], \"0$1\", 1]], \"0\"], TT: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-46-8]\\\\d{6})$|1\", \"868$1\", 0, \"868\"], TV: [\"688\", \"00\", \"(?:2|7\\\\d\\\\d|90)\\\\d{4}\", [5, 6, 7], [[\"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"2\"]], [\"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"90\"]], [\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"7\"]]]], TW: [\"886\", \"0(?:0[25-79]|19)\", \"[2-689]\\\\d{8}|7\\\\d{9,10}|[2-8]\\\\d{7}|2\\\\d{6}\", [7, 8, 9, 10, 11], [[\"(\\\\d{2})(\\\\d)(\\\\d{4})\", \"$1 $2 $3\", [\"202\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[258]0\"], \"0$1\"], [\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]\", \"[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[49]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, 0, 0, \"#\"], TZ: [\"255\", \"00[056]\", \"(?:[25-8]\\\\d|41|90)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[24]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"5\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[67]\"], \"0$1\"]], \"0\"], UA: [\"380\", \"00\", \"[89]\\\\d{9}|[3-9]\\\\d{8}\", [9, 10], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]\", \"6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])\", \"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-7]|89|9[1-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, 0, \"0~0\"], UG: [\"256\", \"00[057]\", \"800\\\\d{6}|(?:[29]0|[347]\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"202\", \"2024\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[27-9]|4(?:6[45]|[7-9])\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"[34]\"], \"0$1\"]], \"0\"], US: [\"1\", \"011\", \"[2-9]\\\\d{9}|3\\\\d{6}\", [10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"310\"], 0, 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"($1) $2-$3\", [\"[2-9]\"], 0, 1, \"$1-$2-$3\"]], \"1\", 0, 0, 0, 0, 0, [[\"(?:5056(?:[0-35-9]\\\\d|4[468])|73020\\\\d)\\\\d{4}|(?:4722|505[2-57-9]|983[289])\\\\d{6}|(?:2(?:0[1-35-9]|1[02-9]|2[03-57-9]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[013569]|3[0-24679]|4[167]|5[0-2]|6[0149]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[179]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\"], [\"\"], [\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"], [\"900[2-9]\\\\d{6}\"], [\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]], UY: [\"598\", \"0(?:0|1[3-9]\\\\d)\", \"0004\\\\d{2,9}|[1249]\\\\d{7}|(?:[49]\\\\d|80)\\\\d{5}\", [6, 7, 8, 9, 10, 11, 12, 13], [[\"(\\\\d{3})(\\\\d{3,4})\", \"$1 $2\", [\"0\"]], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[49]0|8\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[124]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"0\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3 $4\", [\"0\"]]], \"0\", 0, 0, 0, 0, 0, 0, \"00\", \" int. \"], UZ: [\"998\", \"810\", \"(?:20|33|[5-79]\\\\d|88)\\\\d{7}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[235-9]\"], \"8 $1\"]], \"8\", 0, 0, 0, 0, 0, 0, \"8~10\"], VA: [\"39\", \"00\", \"0\\\\d{5,10}|3[0-8]\\\\d{7,10}|55\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?|(?:1\\\\d|39)\\\\d{7,8}\", [6, 7, 8, 9, 10, 11], 0, 0, 0, 0, 0, 0, \"06698\"], VC: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|784|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-7]\\\\d{6})$|1\", \"784$1\", 0, \"784\"], VE: [\"58\", \"00\", \"[68]00\\\\d{7}|(?:[24]\\\\d|[59]0)\\\\d{8}\", [10], [[\"(\\\\d{3})(\\\\d{7})\", \"$1-$2\", [\"[24-689]\"], \"0$1\"]], \"0\"], VG: [\"1\", \"011\", \"(?:284|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-578]\\\\d{6})$|1\", \"284$1\", 0, \"284\"], VI: [\"1\", \"011\", \"[58]\\\\d{9}|(?:34|90)0\\\\d{7}\", [10], 0, \"1\", 0, \"([2-9]\\\\d{6})$|1\", \"340$1\", 0, \"340\"], VN: [\"84\", \"00\", \"[12]\\\\d{9}|[135-9]\\\\d{8}|[16]\\\\d{7}|[16-8]\\\\d{6}\", [7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"80\"], \"0$1\", 1], [\"(\\\\d{4})(\\\\d{4,6})\", \"$1 $2\", [\"1\"], 0, 1], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"6\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[357-9]\"], \"0$1\", 1], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[48]\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\", 1]], \"0\"], VU: [\"678\", \"00\", \"[57-9]\\\\d{6}|(?:[238]\\\\d|48)\\\\d{3}\", [5, 7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[57-9]\"]]]], WF: [\"681\", \"00\", \"(?:40|72)\\\\d{4}|8\\\\d{5}(?:\\\\d{3})?\", [6, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[478]\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]]]], WS: [\"685\", \"0\", \"(?:[2-6]|8\\\\d{5})\\\\d{4}|[78]\\\\d{6}|[68]\\\\d{5}\", [5, 6, 7, 10], [[\"(\\\\d{5})\", \"$1\", [\"[2-5]|6[1-9]\"]], [\"(\\\\d{3})(\\\\d{3,7})\", \"$1 $2\", [\"[68]\"]], [\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"7\"]]]], XK: [\"383\", \"00\", \"[23]\\\\d{7,8}|(?:4\\\\d\\\\d|[89]00)\\\\d{5}\", [8, 9], [[\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-4]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[23]\"], \"0$1\"]], \"0\"], YE: [\"967\", \"00\", \"(?:1|7\\\\d)\\\\d{7}|[1-7]\\\\d{6}\", [7, 8, 9], [[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-6]|7(?:[24-6]|8[0-7])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], \"0\"], YT: [\"262\", \"00\", \"(?:80|9\\\\d)\\\\d{7}|(?:26|63)9\\\\d{6}\", [9], 0, \"0\", 0, 0, 0, 0, 0, [[\"269(?:0[0-467]|5[0-4]|6\\\\d|[78]0)\\\\d{4}\"], [\"639(?:0[0-79]|1[019]|[267]\\\\d|3[09]|40|5[05-9]|9[04-79])\\\\d{4}\"], [\"80\\\\d{7}\"], 0, 0, 0, 0, 0, [\"9(?:(?:39|47)8[01]|769\\\\d)\\\\d{4}\"]]], ZA: [\"27\", \"00\", \"[1-79]\\\\d{8}|8\\\\d{4,9}\", [5, 6, 7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"8[1-4]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"8[1-4]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"860\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]], \"0\"], ZM: [\"260\", \"00\", \"800\\\\d{6}|(?:21|63|[79]\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[28]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"[79]\"], \"0$1\"]], \"0\"], ZW: [\"263\", \"00\", \"2(?:[0-57-9]\\\\d{6,8}|6[0-24-9]\\\\d{6,7})|[38]\\\\d{9}|[35-8]\\\\d{8}|[3-6]\\\\d{7}|[1-689]\\\\d{6}|[1-3569]\\\\d{5}|[1356]\\\\d{4}\", [5, 6, 7, 8, 9, 10], [[\"(\\\\d{3})(\\\\d{3,5})\", \"$1 $2\", [\"2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"[49]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"80\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2\", \"2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)\", \"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"8\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3,5})\", \"$1 $2\", [\"1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"29[013-9]|39|54\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3,5})\", \"$1 $2\", [\"(?:25|54)8\", \"258|5483\"], \"0$1\"]], \"0\"] }, nonGeographic: { 800: [\"800\", 0, \"(?:00|[1-9]\\\\d)\\\\d{6}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"\\\\d\"]]], 0, 0, 0, 0, 0, 0, [0, 0, [\"(?:00|[1-9]\\\\d)\\\\d{6}\"]]], 808: [\"808\", 0, \"[1-9]\\\\d{7}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[1-9]\"]]], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, 0, [\"[1-9]\\\\d{7}\"]]], 870: [\"870\", 0, \"7\\\\d{11}|[35-7]\\\\d{8}\", [9, 12], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[35-7]\"]]], 0, 0, 0, 0, 0, 0, [0, [\"(?:[356]|774[45])\\\\d{8}|7[6-8]\\\\d{7}\"]]], 878: [\"878\", 0, \"10\\\\d{10}\", [12], [[\"(\\\\d{2})(\\\\d{5})(\\\\d{5})\", \"$1 $2 $3\", [\"1\"]]], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, [\"10\\\\d{10}\"]]], 881: [\"881\", 0, \"6\\\\d{9}|[0-36-9]\\\\d{8}\", [9, 10], [[\"(\\\\d)(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\", [\"[0-37-9]\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{5,6})\", \"$1 $2 $3\", [\"6\"]]], 0, 0, 0, 0, 0, 0, [0, [\"6\\\\d{9}|[0-36-9]\\\\d{8}\"]]], 882: [\"882\", 0, \"[13]\\\\d{6}(?:\\\\d{2,5})?|[19]\\\\d{7}|(?:[25]\\\\d\\\\d|4)\\\\d{7}(?:\\\\d{2})?\", [7, 8, 9, 10, 11, 12], [[\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"16|342\"]], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"49\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"1[36]|9\"]], [\"(\\\\d{2})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"3[23]\"]], [\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"16\"]], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"10|23|3(?:[15]|4[57])|4|51\"]], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"34\"]], [\"(\\\\d{2})(\\\\d{4,5})(\\\\d{5})\", \"$1 $2 $3\", [\"[1-35]\"]]], 0, 0, 0, 0, 0, 0, [0, [\"342\\\\d{4}|(?:337|49)\\\\d{6}|(?:3(?:2|47|7\\\\d{3})|50\\\\d{3})\\\\d{7}\", [7, 8, 9, 10, 12]], 0, 0, 0, 0, 0, 0, [\"1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\\\d{4}|6\\\\d{5,10})|(?:345\\\\d|9[89])\\\\d{6}|(?:10|2(?:3|85\\\\d)|3(?:[15]|[69]\\\\d\\\\d)|4[15-8]|51)\\\\d{8}\"]]], 883: [\"883\", 0, \"(?:[1-4]\\\\d|51)\\\\d{6,10}\", [8, 9, 10, 11, 12], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,8})\", \"$1 $2 $3\", [\"[14]|2[24-689]|3[02-689]|51[24-9]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"510\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"21\"]], [\"(\\\\d{4})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"51[13]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"[235]\"]]], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, [\"(?:2(?:00\\\\d\\\\d|10)|(?:370[1-9]|51\\\\d0)\\\\d)\\\\d{7}|51(?:00\\\\d{5}|[24-9]0\\\\d{4,7})|(?:1[0-79]|2[24-689]|3[02-689]|4[0-4])0\\\\d{5,9}\"]]], 888: [\"888\", 0, \"\\\\d{11}\", [11], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\"]], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, [\"\\\\d{11}\"]]], 979: [\"979\", 0, \"[1359]\\\\d{8}\", [9], [[\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[1359]\"]]], 0, 0, 0, 0, 0, 0, [0, 0, 0, [\"[1359]\\\\d{8}\"]]] } };\nfunction Ye(e, d) {\n  var t = Array.prototype.slice.call(d);\n  return t.push(Ze), e.apply(this, t);\n}\nfunction j(e) {\n  \"@babel/helpers - typeof\";\n  return j = typeof Symbol == \"function\" && typeof Symbol.iterator == \"symbol\" ? function(d) {\n    return typeof d;\n  } : function(d) {\n    return d && typeof Symbol == \"function\" && d.constructor === Symbol && d !== Symbol.prototype ? \"symbol\" : typeof d;\n  }, j(e);\n}\nfunction Q(e, d) {\n  for (var t = 0; t < d.length; t++) {\n    var n = d[t];\n    n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n  }\n}\nfunction Je(e, d, t) {\n  return d && Q(e.prototype, d), t && Q(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e;\n}\nfunction qe(e, d) {\n  if (!(e instanceof d))\n    throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction Qe(e, d) {\n  if (typeof d != \"function\" && d !== null)\n    throw new TypeError(\"Super expression must either be null or a function\");\n  e.prototype = Object.create(d && d.prototype, { constructor: { value: e, writable: !0, configurable: !0 } }), Object.defineProperty(e, \"prototype\", { writable: !1 }), d && w(e, d);\n}\nfunction ed(e) {\n  var d = Se();\n  return function() {\n    var n = E(e), r;\n    if (d) {\n      var i = E(this).constructor;\n      r = Reflect.construct(n, arguments, i);\n    } else\n      r = n.apply(this, arguments);\n    return dd(this, r);\n  };\n}\nfunction dd(e, d) {\n  if (d && (j(d) === \"object\" || typeof d == \"function\"))\n    return d;\n  if (d !== void 0)\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return Ee(e);\n}\nfunction Ee(e) {\n  if (e === void 0)\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nfunction U(e) {\n  var d = typeof Map == \"function\" ? /* @__PURE__ */ new Map() : void 0;\n  return U = function(n) {\n    if (n === null || !td(n))\n      return n;\n    if (typeof n != \"function\")\n      throw new TypeError(\"Super expression must either be null or a function\");\n    if (typeof d < \"u\") {\n      if (d.has(n))\n        return d.get(n);\n      d.set(n, r);\n    }\n    function r() {\n      return F(n, arguments, E(this).constructor);\n    }\n    return r.prototype = Object.create(n.prototype, { constructor: { value: r, enumerable: !1, writable: !0, configurable: !0 } }), w(r, n);\n  }, U(e);\n}\nfunction F(e, d, t) {\n  return Se() ? F = Reflect.construct : F = function(r, i, a) {\n    var $ = [null];\n    $.push.apply($, i);\n    var o = Function.bind.apply(r, $), u = new o();\n    return a && w(u, a.prototype), u;\n  }, F.apply(null, arguments);\n}\nfunction Se() {\n  if (typeof Reflect > \"u\" || !Reflect.construct || Reflect.construct.sham)\n    return !1;\n  if (typeof Proxy == \"function\")\n    return !0;\n  try {\n    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {\n    })), !0;\n  } catch {\n    return !1;\n  }\n}\nfunction td(e) {\n  return Function.toString.call(e).indexOf(\"[native code]\") !== -1;\n}\nfunction w(e, d) {\n  return w = Object.setPrototypeOf || function(n, r) {\n    return n.__proto__ = r, n;\n  }, w(e, d);\n}\nfunction E(e) {\n  return E = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, E(e);\n}\nvar g = /* @__PURE__ */ function(e) {\n  Qe(t, e);\n  var d = ed(t);\n  function t(n) {\n    var r;\n    return qe(this, t), r = d.call(this, n), Object.setPrototypeOf(Ee(r), t.prototype), r.name = r.constructor.name, r;\n  }\n  return Je(t);\n}(/* @__PURE__ */ U(Error)), z = 2, nd = 17, rd = 3, f = \"0-9０-９٠-٩۰-۹\", id = \"-‐-―−ー－\", $d = \"／/\", ad = \"．.\", od = \"  ­​⁠　\", ud = \"()（）［］\\\\[\\\\]\", sd = \"~⁓∼～\", x = \"\".concat(id).concat($d).concat(ad).concat(od).concat(ud).concat(sd), X = \"+＋\";\nfunction ee(e, d) {\n  e = e.split(\"-\"), d = d.split(\"-\");\n  for (var t = e[0].split(\".\"), n = d[0].split(\".\"), r = 0; r < 3; r++) {\n    var i = Number(t[r]), a = Number(n[r]);\n    if (i > a)\n      return 1;\n    if (a > i)\n      return -1;\n    if (!isNaN(i) && isNaN(a))\n      return 1;\n    if (isNaN(i) && !isNaN(a))\n      return -1;\n  }\n  return e[1] && d[1] ? e[1] > d[1] ? 1 : e[1] < d[1] ? -1 : 0 : !e[1] && d[1] ? 1 : e[1] && !d[1] ? -1 : 0;\n}\nvar ld = {}.constructor;\nfunction T(e) {\n  return e != null && e.constructor === ld;\n}\nfunction H(e) {\n  \"@babel/helpers - typeof\";\n  return H = typeof Symbol == \"function\" && typeof Symbol.iterator == \"symbol\" ? function(d) {\n    return typeof d;\n  } : function(d) {\n    return d && typeof Symbol == \"function\" && d.constructor === Symbol && d !== Symbol.prototype ? \"symbol\" : typeof d;\n  }, H(e);\n}\nfunction D(e, d) {\n  if (!(e instanceof d))\n    throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction de(e, d) {\n  for (var t = 0; t < d.length; t++) {\n    var n = d[t];\n    n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n  }\n}\nfunction R(e, d, t) {\n  return d && de(e.prototype, d), t && de(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e;\n}\nvar cd = \"1.2.0\", fd = \"1.7.35\", te = \" ext. \", hd = /^\\d+$/, l = /* @__PURE__ */ function() {\n  function e(d) {\n    D(this, e), md(d), this.metadata = d, _e.call(this, d);\n  }\n  return R(e, [{\n    key: \"getCountries\",\n    value: function() {\n      return Object.keys(this.metadata.countries).filter(function(t) {\n        return t !== \"001\";\n      });\n    }\n  }, {\n    key: \"getCountryMetadata\",\n    value: function(t) {\n      return this.metadata.countries[t];\n    }\n  }, {\n    key: \"nonGeographic\",\n    value: function() {\n      if (!(this.v1 || this.v2 || this.v3))\n        return this.metadata.nonGeographic || this.metadata.nonGeographical;\n    }\n  }, {\n    key: \"hasCountry\",\n    value: function(t) {\n      return this.getCountryMetadata(t) !== void 0;\n    }\n  }, {\n    key: \"hasCallingCode\",\n    value: function(t) {\n      if (this.getCountryCodesForCallingCode(t))\n        return !0;\n      if (this.nonGeographic()) {\n        if (this.nonGeographic()[t])\n          return !0;\n      } else {\n        var n = this.countryCallingCodes()[t];\n        if (n && n.length === 1 && n[0] === \"001\")\n          return !0;\n      }\n    }\n  }, {\n    key: \"isNonGeographicCallingCode\",\n    value: function(t) {\n      return this.nonGeographic() ? !!this.nonGeographic()[t] : !this.getCountryCodesForCallingCode(t);\n    }\n    // Deprecated.\n  }, {\n    key: \"country\",\n    value: function(t) {\n      return this.selectNumberingPlan(t);\n    }\n  }, {\n    key: \"selectNumberingPlan\",\n    value: function(t, n) {\n      if (t && hd.test(t) && (n = t, t = null), t && t !== \"001\") {\n        if (!this.hasCountry(t))\n          throw new Error(\"Unknown country: \".concat(t));\n        this.numberingPlan = new ne(this.getCountryMetadata(t), this);\n      } else if (n) {\n        if (!this.hasCallingCode(n))\n          throw new Error(\"Unknown calling code: \".concat(n));\n        this.numberingPlan = new ne(this.getNumberingPlanMetadata(n), this);\n      } else\n        this.numberingPlan = void 0;\n      return this;\n    }\n  }, {\n    key: \"getCountryCodesForCallingCode\",\n    value: function(t) {\n      var n = this.countryCallingCodes()[t];\n      if (n)\n        return n.length === 1 && n[0].length === 3 ? void 0 : n;\n    }\n  }, {\n    key: \"getCountryCodeForCallingCode\",\n    value: function(t) {\n      var n = this.getCountryCodesForCallingCode(t);\n      if (n)\n        return n[0];\n    }\n  }, {\n    key: \"getNumberingPlanMetadata\",\n    value: function(t) {\n      var n = this.getCountryCodeForCallingCode(t);\n      if (n)\n        return this.getCountryMetadata(n);\n      if (this.nonGeographic()) {\n        var r = this.nonGeographic()[t];\n        if (r)\n          return r;\n      } else {\n        var i = this.countryCallingCodes()[t];\n        if (i && i.length === 1 && i[0] === \"001\")\n          return this.metadata.countries[\"001\"];\n      }\n    }\n    // Deprecated.\n  }, {\n    key: \"countryCallingCode\",\n    value: function() {\n      return this.numberingPlan.callingCode();\n    }\n    // Deprecated.\n  }, {\n    key: \"IDDPrefix\",\n    value: function() {\n      return this.numberingPlan.IDDPrefix();\n    }\n    // Deprecated.\n  }, {\n    key: \"defaultIDDPrefix\",\n    value: function() {\n      return this.numberingPlan.defaultIDDPrefix();\n    }\n    // Deprecated.\n  }, {\n    key: \"nationalNumberPattern\",\n    value: function() {\n      return this.numberingPlan.nationalNumberPattern();\n    }\n    // Deprecated.\n  }, {\n    key: \"possibleLengths\",\n    value: function() {\n      return this.numberingPlan.possibleLengths();\n    }\n    // Deprecated.\n  }, {\n    key: \"formats\",\n    value: function() {\n      return this.numberingPlan.formats();\n    }\n    // Deprecated.\n  }, {\n    key: \"nationalPrefixForParsing\",\n    value: function() {\n      return this.numberingPlan.nationalPrefixForParsing();\n    }\n    // Deprecated.\n  }, {\n    key: \"nationalPrefixTransformRule\",\n    value: function() {\n      return this.numberingPlan.nationalPrefixTransformRule();\n    }\n    // Deprecated.\n  }, {\n    key: \"leadingDigits\",\n    value: function() {\n      return this.numberingPlan.leadingDigits();\n    }\n    // Deprecated.\n  }, {\n    key: \"hasTypes\",\n    value: function() {\n      return this.numberingPlan.hasTypes();\n    }\n    // Deprecated.\n  }, {\n    key: \"type\",\n    value: function(t) {\n      return this.numberingPlan.type(t);\n    }\n    // Deprecated.\n  }, {\n    key: \"ext\",\n    value: function() {\n      return this.numberingPlan.ext();\n    }\n  }, {\n    key: \"countryCallingCodes\",\n    value: function() {\n      return this.v1 ? this.metadata.country_phone_code_to_countries : this.metadata.country_calling_codes;\n    }\n    // Deprecated.\n  }, {\n    key: \"chooseCountryByCountryCallingCode\",\n    value: function(t) {\n      return this.selectNumberingPlan(t);\n    }\n  }, {\n    key: \"hasSelectedNumberingPlan\",\n    value: function() {\n      return this.numberingPlan !== void 0;\n    }\n  }]), e;\n}(), ne = /* @__PURE__ */ function() {\n  function e(d, t) {\n    D(this, e), this.globalMetadataObject = t, this.metadata = d, _e.call(this, t.metadata);\n  }\n  return R(e, [{\n    key: \"callingCode\",\n    value: function() {\n      return this.metadata[0];\n    }\n    // Formatting information for regions which share\n    // a country calling code is contained by only one region\n    // for performance reasons. For example, for NANPA region\n    // (\"North American Numbering Plan Administration\",\n    //  which includes USA, Canada, Cayman Islands, Bahamas, etc)\n    // it will be contained in the metadata for `US`.\n  }, {\n    key: \"getDefaultCountryMetadataForRegion\",\n    value: function() {\n      return this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode());\n    }\n    // Is always present.\n  }, {\n    key: \"IDDPrefix\",\n    value: function() {\n      if (!(this.v1 || this.v2))\n        return this.metadata[1];\n    }\n    // Is only present when a country supports multiple IDD prefixes.\n  }, {\n    key: \"defaultIDDPrefix\",\n    value: function() {\n      if (!(this.v1 || this.v2))\n        return this.metadata[12];\n    }\n  }, {\n    key: \"nationalNumberPattern\",\n    value: function() {\n      return this.v1 || this.v2 ? this.metadata[1] : this.metadata[2];\n    }\n    // \"possible length\" data is always present in Google's metadata.\n  }, {\n    key: \"possibleLengths\",\n    value: function() {\n      if (!this.v1)\n        return this.metadata[this.v2 ? 2 : 3];\n    }\n  }, {\n    key: \"_getFormats\",\n    value: function(t) {\n      return t[this.v1 ? 2 : this.v2 ? 3 : 4];\n    }\n    // For countries of the same region (e.g. NANPA)\n    // formats are all stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n  }, {\n    key: \"formats\",\n    value: function() {\n      var t = this, n = this._getFormats(this.metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || [];\n      return n.map(function(r) {\n        return new pd(r, t);\n      });\n    }\n  }, {\n    key: \"nationalPrefix\",\n    value: function() {\n      return this.metadata[this.v1 ? 3 : this.v2 ? 4 : 5];\n    }\n  }, {\n    key: \"_getNationalPrefixFormattingRule\",\n    value: function(t) {\n      return t[this.v1 ? 4 : this.v2 ? 5 : 6];\n    }\n    // For countries of the same region (e.g. NANPA)\n    // national prefix formatting rule is stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n  }, {\n    key: \"nationalPrefixFormattingRule\",\n    value: function() {\n      return this._getNationalPrefixFormattingRule(this.metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion());\n    }\n  }, {\n    key: \"_nationalPrefixForParsing\",\n    value: function() {\n      return this.metadata[this.v1 ? 5 : this.v2 ? 6 : 7];\n    }\n  }, {\n    key: \"nationalPrefixForParsing\",\n    value: function() {\n      return this._nationalPrefixForParsing() || this.nationalPrefix();\n    }\n  }, {\n    key: \"nationalPrefixTransformRule\",\n    value: function() {\n      return this.metadata[this.v1 ? 6 : this.v2 ? 7 : 8];\n    }\n  }, {\n    key: \"_getNationalPrefixIsOptionalWhenFormatting\",\n    value: function() {\n      return !!this.metadata[this.v1 ? 7 : this.v2 ? 8 : 9];\n    }\n    // For countries of the same region (e.g. NANPA)\n    // \"national prefix is optional when formatting\" flag is\n    // stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n  }, {\n    key: \"nationalPrefixIsOptionalWhenFormattingInNationalFormat\",\n    value: function() {\n      return this._getNationalPrefixIsOptionalWhenFormatting(this.metadata) || this._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion());\n    }\n  }, {\n    key: \"leadingDigits\",\n    value: function() {\n      return this.metadata[this.v1 ? 8 : this.v2 ? 9 : 10];\n    }\n  }, {\n    key: \"types\",\n    value: function() {\n      return this.metadata[this.v1 ? 9 : this.v2 ? 10 : 11];\n    }\n  }, {\n    key: \"hasTypes\",\n    value: function() {\n      return this.types() && this.types().length === 0 ? !1 : !!this.types();\n    }\n  }, {\n    key: \"type\",\n    value: function(t) {\n      if (this.hasTypes() && re(this.types(), t))\n        return new gd(re(this.types(), t), this);\n    }\n  }, {\n    key: \"ext\",\n    value: function() {\n      return this.v1 || this.v2 ? te : this.metadata[13] || te;\n    }\n  }]), e;\n}(), pd = /* @__PURE__ */ function() {\n  function e(d, t) {\n    D(this, e), this._format = d, this.metadata = t;\n  }\n  return R(e, [{\n    key: \"pattern\",\n    value: function() {\n      return this._format[0];\n    }\n  }, {\n    key: \"format\",\n    value: function() {\n      return this._format[1];\n    }\n  }, {\n    key: \"leadingDigitsPatterns\",\n    value: function() {\n      return this._format[2] || [];\n    }\n  }, {\n    key: \"nationalPrefixFormattingRule\",\n    value: function() {\n      return this._format[3] || this.metadata.nationalPrefixFormattingRule();\n    }\n  }, {\n    key: \"nationalPrefixIsOptionalWhenFormattingInNationalFormat\",\n    value: function() {\n      return !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat();\n    }\n  }, {\n    key: \"nationalPrefixIsMandatoryWhenFormattingInNationalFormat\",\n    value: function() {\n      return this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormattingInNationalFormat();\n    }\n    // Checks whether national prefix formatting rule contains national prefix.\n  }, {\n    key: \"usesNationalPrefix\",\n    value: function() {\n      return !!(this.nationalPrefixFormattingRule() && // Check that national prefix formatting rule is not a \"dummy\" one.\n      !yd.test(this.nationalPrefixFormattingRule()));\n    }\n  }, {\n    key: \"internationalFormat\",\n    value: function() {\n      return this._format[5] || this.format();\n    }\n  }]), e;\n}(), yd = /^\\(?\\$1\\)?$/, gd = /* @__PURE__ */ function() {\n  function e(d, t) {\n    D(this, e), this.type = d, this.metadata = t;\n  }\n  return R(e, [{\n    key: \"pattern\",\n    value: function() {\n      return this.metadata.v1 ? this.type : this.type[0];\n    }\n  }, {\n    key: \"possibleLengths\",\n    value: function() {\n      if (!this.metadata.v1)\n        return this.type[1] || this.metadata.possibleLengths();\n    }\n  }]), e;\n}();\nfunction re(e, d) {\n  switch (d) {\n    case \"FIXED_LINE\":\n      return e[0];\n    case \"MOBILE\":\n      return e[1];\n    case \"TOLL_FREE\":\n      return e[2];\n    case \"PREMIUM_RATE\":\n      return e[3];\n    case \"PERSONAL_NUMBER\":\n      return e[4];\n    case \"VOICEMAIL\":\n      return e[5];\n    case \"UAN\":\n      return e[6];\n    case \"PAGER\":\n      return e[7];\n    case \"VOIP\":\n      return e[8];\n    case \"SHARED_COST\":\n      return e[9];\n  }\n}\nfunction md(e) {\n  if (!e)\n    throw new Error(\"[libphonenumber-js] `metadata` argument not passed. Check your arguments.\");\n  if (!T(e) || !T(e.countries))\n    throw new Error(\"[libphonenumber-js] `metadata` argument was passed but it's not a valid metadata. Must be an object having `.countries` child object property. Got \".concat(T(e) ? \"an object of shape: { \" + Object.keys(e).join(\", \") + \" }\" : \"a \" + vd(e) + \": \" + e, \".\"));\n}\nvar vd = function(d) {\n  return H(d);\n};\nfunction Z(e, d) {\n  if (d = new l(d), d.hasCountry(e))\n    return d.country(e).countryCallingCode();\n  throw new Error(\"Unknown country: \".concat(e));\n}\nfunction bd(e, d) {\n  return d.countries.hasOwnProperty(e);\n}\nfunction _e(e) {\n  var d = e.version;\n  typeof d == \"number\" ? (this.v1 = d === 1, this.v2 = d === 2, this.v3 = d === 3, this.v4 = d === 4) : d ? ee(d, cd) === -1 ? this.v2 = !0 : ee(d, fd) === -1 ? this.v3 = !0 : this.v4 = !0 : this.v1 = !0;\n}\nvar Cd = \";ext=\", P = function(d) {\n  return \"([\".concat(f, \"]{1,\").concat(d, \"})\");\n};\nfunction Fe(e) {\n  var d = \"20\", t = \"15\", n = \"9\", r = \"6\", i = \"[  \\\\t,]*\", a = \"[:\\\\.．]?[  \\\\t,-]*\", $ = \"#?\", o = \"(?:e?xt(?:ensi(?:ó?|ó))?n?|ｅ?ｘｔｎ?|доб|anexo)\", u = \"(?:[xｘ#＃~～]|int|ｉｎｔ)\", c = \"[- ]+\", v = \"[  \\\\t]*\", y = \"(?:,{2}|;)\", b = Cd + P(d), N = i + o + a + P(d) + $, De = i + u + a + P(n) + $, Re = c + P(r) + \"#\", Me = v + y + a + P(t) + $, Le = v + \"(?:,)+\" + a + P(n) + $;\n  return b + \"|\" + N + \"|\" + De + \"|\" + Re + \"|\" + Me + \"|\" + Le;\n}\nvar Od = \"[\" + f + \"]{\" + z + \"}\", Pd = \"[\" + X + \"]{0,1}(?:[\" + x + \"]*[\" + f + \"]){3,}[\" + x + f + \"]*\", Nd = new RegExp(\"^[\" + X + \"]{0,1}(?:[\" + x + \"]*[\" + f + \"]){1,2}$\", \"i\"), Id = Pd + // Phone number extensions\n\"(?:\" + Fe() + \")?\", wd = new RegExp(\n  // Either a short two-digit-only phone number\n  \"^\" + Od + \"$|^\" + Id + \"$\",\n  \"i\"\n);\nfunction Ed(e) {\n  return e.length >= z && wd.test(e);\n}\nfunction Sd(e) {\n  return Nd.test(e);\n}\nvar ie = new RegExp(\"(?:\" + Fe() + \")$\", \"i\");\nfunction _d(e) {\n  var d = e.search(ie);\n  if (d < 0)\n    return {};\n  for (var t = e.slice(0, d), n = e.match(ie), r = 1; r < n.length; ) {\n    if (n[r])\n      return {\n        number: t,\n        ext: n[r]\n      };\n    r++;\n  }\n}\nvar Fd = {\n  0: \"0\",\n  1: \"1\",\n  2: \"2\",\n  3: \"3\",\n  4: \"4\",\n  5: \"5\",\n  6: \"6\",\n  7: \"7\",\n  8: \"8\",\n  9: \"9\",\n  \"０\": \"0\",\n  // Fullwidth digit 0\n  \"１\": \"1\",\n  // Fullwidth digit 1\n  \"２\": \"2\",\n  // Fullwidth digit 2\n  \"３\": \"3\",\n  // Fullwidth digit 3\n  \"４\": \"4\",\n  // Fullwidth digit 4\n  \"５\": \"5\",\n  // Fullwidth digit 5\n  \"６\": \"6\",\n  // Fullwidth digit 6\n  \"７\": \"7\",\n  // Fullwidth digit 7\n  \"８\": \"8\",\n  // Fullwidth digit 8\n  \"９\": \"9\",\n  // Fullwidth digit 9\n  \"٠\": \"0\",\n  // Arabic-indic digit 0\n  \"١\": \"1\",\n  // Arabic-indic digit 1\n  \"٢\": \"2\",\n  // Arabic-indic digit 2\n  \"٣\": \"3\",\n  // Arabic-indic digit 3\n  \"٤\": \"4\",\n  // Arabic-indic digit 4\n  \"٥\": \"5\",\n  // Arabic-indic digit 5\n  \"٦\": \"6\",\n  // Arabic-indic digit 6\n  \"٧\": \"7\",\n  // Arabic-indic digit 7\n  \"٨\": \"8\",\n  // Arabic-indic digit 8\n  \"٩\": \"9\",\n  // Arabic-indic digit 9\n  \"۰\": \"0\",\n  // Eastern-Arabic digit 0\n  \"۱\": \"1\",\n  // Eastern-Arabic digit 1\n  \"۲\": \"2\",\n  // Eastern-Arabic digit 2\n  \"۳\": \"3\",\n  // Eastern-Arabic digit 3\n  \"۴\": \"4\",\n  // Eastern-Arabic digit 4\n  \"۵\": \"5\",\n  // Eastern-Arabic digit 5\n  \"۶\": \"6\",\n  // Eastern-Arabic digit 6\n  \"۷\": \"7\",\n  // Eastern-Arabic digit 7\n  \"۸\": \"8\",\n  // Eastern-Arabic digit 8\n  \"۹\": \"9\"\n  // Eastern-Arabic digit 9\n};\nfunction Td(e) {\n  return Fd[e];\n}\nfunction xd(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t)\n    return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = Ad(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function() {\n      return n >= e.length ? { done: !0 } : { done: !1, value: e[n++] };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction Ad(e, d) {\n  if (e) {\n    if (typeof e == \"string\")\n      return $e(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\")\n      return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))\n      return $e(e, d);\n  }\n}\nfunction $e(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++)\n    n[t] = e[t];\n  return n;\n}\nfunction ae(e) {\n  for (var d = \"\", t = xd(e.split(\"\")), n; !(n = t()).done; ) {\n    var r = n.value;\n    d += Dd(r, d) || \"\";\n  }\n  return d;\n}\nfunction Dd(e, d) {\n  return e === \"+\" ? d ? void 0 : \"+\" : Td(e);\n}\nfunction Rd(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t)\n    return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = Md(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function() {\n      return n >= e.length ? { done: !0 } : { done: !1, value: e[n++] };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction Md(e, d) {\n  if (e) {\n    if (typeof e == \"string\")\n      return oe(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\")\n      return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))\n      return oe(e, d);\n  }\n}\nfunction oe(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++)\n    n[t] = e[t];\n  return n;\n}\nfunction Ld(e, d) {\n  for (var t = e.slice(), n = Rd(d), r; !(r = n()).done; ) {\n    var i = r.value;\n    e.indexOf(i) < 0 && t.push(i);\n  }\n  return t.sort(function(a, $) {\n    return a - $;\n  });\n}\nfunction Y(e, d) {\n  return Te(e, void 0, d);\n}\nfunction Te(e, d, t) {\n  var n = t.type(d), r = n && n.possibleLengths() || t.possibleLengths();\n  if (!r)\n    return \"IS_POSSIBLE\";\n  if (d === \"FIXED_LINE_OR_MOBILE\") {\n    if (!t.type(\"FIXED_LINE\"))\n      return Te(e, \"MOBILE\", t);\n    var i = t.type(\"MOBILE\");\n    i && (r = Ld(r, i.possibleLengths()));\n  } else if (d && !n)\n    return \"INVALID_LENGTH\";\n  var a = e.length, $ = r[0];\n  return $ === a ? \"IS_POSSIBLE\" : $ > a ? \"TOO_SHORT\" : r[r.length - 1] < a ? \"TOO_LONG\" : r.indexOf(a, 1) >= 0 ? \"IS_POSSIBLE\" : \"INVALID_LENGTH\";\n}\nfunction kd(e, d, t) {\n  if (d === void 0 && (d = {}), t = new l(t), d.v2) {\n    if (!e.countryCallingCode)\n      throw new Error(\"Invalid phone number object passed\");\n    t.selectNumberingPlan(e.countryCallingCode);\n  } else {\n    if (!e.phone)\n      return !1;\n    if (e.country) {\n      if (!t.hasCountry(e.country))\n        throw new Error(\"Unknown country: \".concat(e.country));\n      t.country(e.country);\n    } else {\n      if (!e.countryCallingCode)\n        throw new Error(\"Invalid phone number object passed\");\n      t.selectNumberingPlan(e.countryCallingCode);\n    }\n  }\n  if (t.possibleLengths())\n    return xe(e.phone || e.nationalNumber, t);\n  if (e.countryCallingCode && t.isNonGeographicCallingCode(e.countryCallingCode))\n    return !0;\n  throw new Error('Missing \"possibleLengths\" in metadata. Perhaps the metadata has been generated before v1.0.18.');\n}\nfunction xe(e, d) {\n  switch (Y(e, d)) {\n    case \"IS_POSSIBLE\":\n      return !0;\n    default:\n      return !1;\n  }\n}\nfunction m(e, d) {\n  return e = e || \"\", new RegExp(\"^(?:\" + d + \")$\").test(e);\n}\nfunction Bd(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t)\n    return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = Gd(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function() {\n      return n >= e.length ? { done: !0 } : { done: !1, value: e[n++] };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction Gd(e, d) {\n  if (e) {\n    if (typeof e == \"string\")\n      return ue(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\")\n      return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))\n      return ue(e, d);\n  }\n}\nfunction ue(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++)\n    n[t] = e[t];\n  return n;\n}\nvar jd = [\"MOBILE\", \"PREMIUM_RATE\", \"TOLL_FREE\", \"SHARED_COST\", \"VOIP\", \"PERSONAL_NUMBER\", \"PAGER\", \"UAN\", \"VOICEMAIL\"];\nfunction J(e, d, t) {\n  if (d = d || {}, !(!e.country && !e.countryCallingCode)) {\n    t = new l(t), t.selectNumberingPlan(e.country, e.countryCallingCode);\n    var n = d.v2 ? e.nationalNumber : e.phone;\n    if (m(n, t.nationalNumberPattern())) {\n      if (L(n, \"FIXED_LINE\", t))\n        return t.type(\"MOBILE\") && t.type(\"MOBILE\").pattern() === \"\" || !t.type(\"MOBILE\") || L(n, \"MOBILE\", t) ? \"FIXED_LINE_OR_MOBILE\" : \"FIXED_LINE\";\n      for (var r = Bd(jd), i; !(i = r()).done; ) {\n        var a = i.value;\n        if (L(n, a, t))\n          return a;\n      }\n    }\n  }\n}\nfunction L(e, d, t) {\n  return d = t.type(d), !d || !d.pattern() || d.possibleLengths() && d.possibleLengths().indexOf(e.length) < 0 ? !1 : m(e, d.pattern());\n}\nfunction Ud(e, d, t) {\n  if (d = d || {}, t = new l(t), t.selectNumberingPlan(e.country, e.countryCallingCode), t.hasTypes())\n    return J(e, d, t.metadata) !== void 0;\n  var n = d.v2 ? e.nationalNumber : e.phone;\n  return m(n, t.nationalNumberPattern());\n}\nfunction Hd(e, d, t) {\n  var n = new l(t), r = n.getCountryCodesForCallingCode(e);\n  return r ? r.filter(function(i) {\n    return Vd(d, i, t);\n  }) : [];\n}\nfunction Vd(e, d, t) {\n  var n = new l(t);\n  return n.selectNumberingPlan(d), n.numberingPlan.possibleLengths().indexOf(e.length) >= 0;\n}\nfunction Kd(e) {\n  return e.replace(new RegExp(\"[\".concat(x, \"]+\"), \"g\"), \" \").trim();\n}\nvar Wd = /(\\$\\d)/;\nfunction zd(e, d, t) {\n  var n = t.useInternationalFormat, r = t.withNationalPrefix;\n  t.carrierCode, t.metadata;\n  var i = e.replace(new RegExp(d.pattern()), n ? d.internationalFormat() : (\n    // This library doesn't use `domestic_carrier_code_formatting_rule`,\n    // because that one is only used when formatting phone numbers\n    // for dialing from a mobile phone, and this is not a dialing library.\n    // carrierCode && format.domesticCarrierCodeFormattingRule()\n    // \t// First, replace the $CC in the formatting rule with the desired carrier code.\n    // \t// Then, replace the $FG in the formatting rule with the first group\n    // \t// and the carrier code combined in the appropriate way.\n    // \t? format.format().replace(FIRST_GROUP_PATTERN, format.domesticCarrierCodeFormattingRule().replace('$CC', carrierCode))\n    // \t: (\n    // \t\twithNationalPrefix && format.nationalPrefixFormattingRule()\n    // \t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\n    // \t\t\t: format.format()\n    // \t)\n    r && d.nationalPrefixFormattingRule() ? d.format().replace(Wd, d.nationalPrefixFormattingRule()) : d.format()\n  ));\n  return n ? Kd(i) : i;\n}\nvar Xd = /^[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?$/;\nfunction Zd(e, d, t) {\n  var n = new l(t);\n  if (n.selectNumberingPlan(e, d), n.defaultIDDPrefix())\n    return n.defaultIDDPrefix();\n  if (Xd.test(n.IDDPrefix()))\n    return n.IDDPrefix();\n}\nfunction Yd(e) {\n  var d = e.number, t = e.ext;\n  if (!d)\n    return \"\";\n  if (d[0] !== \"+\")\n    throw new Error('\"formatRFC3966()\" expects \"number\" to be in E.164 format.');\n  return \"tel:\".concat(d).concat(t ? \";ext=\" + t : \"\");\n}\nfunction Jd(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t)\n    return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = qd(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function() {\n      return n >= e.length ? { done: !0 } : { done: !1, value: e[n++] };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction qd(e, d) {\n  if (e) {\n    if (typeof e == \"string\")\n      return se(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\")\n      return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))\n      return se(e, d);\n  }\n}\nfunction se(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++)\n    n[t] = e[t];\n  return n;\n}\nfunction le(e, d) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    d && (n = n.filter(function(r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, n);\n  }\n  return t;\n}\nfunction ce(e) {\n  for (var d = 1; d < arguments.length; d++) {\n    var t = arguments[d] != null ? arguments[d] : {};\n    d % 2 ? le(Object(t), !0).forEach(function(n) {\n      Qd(e, n, t[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : le(Object(t)).forEach(function(n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));\n    });\n  }\n  return e;\n}\nfunction Qd(e, d, t) {\n  return d in e ? Object.defineProperty(e, d, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[d] = t, e;\n}\nvar fe = {\n  formatExtension: function(d, t, n) {\n    return \"\".concat(d).concat(n.ext()).concat(t);\n  }\n};\nfunction et(e, d, t, n) {\n  if (t ? t = ce(ce({}, fe), t) : t = fe, n = new l(n), e.country && e.country !== \"001\") {\n    if (!n.hasCountry(e.country))\n      throw new Error(\"Unknown country: \".concat(e.country));\n    n.country(e.country);\n  } else if (e.countryCallingCode)\n    n.selectNumberingPlan(e.countryCallingCode);\n  else\n    return e.phone || \"\";\n  var r = n.countryCallingCode(), i = t.v2 ? e.nationalNumber : e.phone, a;\n  switch (d) {\n    case \"NATIONAL\":\n      return i ? (a = A(i, e.carrierCode, \"NATIONAL\", n, t), k(a, e.ext, n, t.formatExtension)) : \"\";\n    case \"INTERNATIONAL\":\n      return i ? (a = A(i, null, \"INTERNATIONAL\", n, t), a = \"+\".concat(r, \" \").concat(a), k(a, e.ext, n, t.formatExtension)) : \"+\".concat(r);\n    case \"E.164\":\n      return \"+\".concat(r).concat(i);\n    case \"RFC3966\":\n      return Yd({\n        number: \"+\".concat(r).concat(i),\n        ext: e.ext\n      });\n    case \"IDD\":\n      if (!t.fromCountry)\n        return;\n      var $ = tt(i, e.carrierCode, r, t.fromCountry, n);\n      return k($, e.ext, n, t.formatExtension);\n    default:\n      throw new Error('Unknown \"format\" argument passed to \"formatNumber()\": \"'.concat(d, '\"'));\n  }\n}\nfunction A(e, d, t, n, r) {\n  var i = dt(n.formats(), e);\n  return i ? zd(e, i, {\n    useInternationalFormat: t === \"INTERNATIONAL\",\n    withNationalPrefix: !(i.nationalPrefixIsOptionalWhenFormattingInNationalFormat() && r && r.nationalPrefix === !1),\n    carrierCode: d,\n    metadata: n\n  }) : e;\n}\nfunction dt(e, d) {\n  for (var t = Jd(e), n; !(n = t()).done; ) {\n    var r = n.value;\n    if (r.leadingDigitsPatterns().length > 0) {\n      var i = r.leadingDigitsPatterns()[r.leadingDigitsPatterns().length - 1];\n      if (d.search(i) !== 0)\n        continue;\n    }\n    if (m(d, r.pattern()))\n      return r;\n  }\n}\nfunction k(e, d, t, n) {\n  return d ? n(e, d, t) : e;\n}\nfunction tt(e, d, t, n, r) {\n  var i = Z(n, r.metadata);\n  if (i === t) {\n    var a = A(e, d, \"NATIONAL\", r);\n    return t === \"1\" ? t + \" \" + a : a;\n  }\n  var $ = Zd(n, void 0, r.metadata);\n  if ($)\n    return \"\".concat($, \" \").concat(t, \" \").concat(A(e, null, \"INTERNATIONAL\", r));\n}\nfunction he(e, d) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    d && (n = n.filter(function(r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, n);\n  }\n  return t;\n}\nfunction pe(e) {\n  for (var d = 1; d < arguments.length; d++) {\n    var t = arguments[d] != null ? arguments[d] : {};\n    d % 2 ? he(Object(t), !0).forEach(function(n) {\n      nt(e, n, t[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : he(Object(t)).forEach(function(n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));\n    });\n  }\n  return e;\n}\nfunction nt(e, d, t) {\n  return d in e ? Object.defineProperty(e, d, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[d] = t, e;\n}\nfunction rt(e, d) {\n  if (!(e instanceof d))\n    throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction ye(e, d) {\n  for (var t = 0; t < d.length; t++) {\n    var n = d[t];\n    n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n  }\n}\nfunction it(e, d, t) {\n  return d && ye(e.prototype, d), t && ye(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e;\n}\nvar $t = /* @__PURE__ */ function() {\n  function e(d, t, n) {\n    if (rt(this, e), !d)\n      throw new TypeError(\"`country` or `countryCallingCode` not passed\");\n    if (!t)\n      throw new TypeError(\"`nationalNumber` not passed\");\n    if (!n)\n      throw new TypeError(\"`metadata` not passed\");\n    var r = ot(d, n), i = r.country, a = r.countryCallingCode;\n    this.country = i, this.countryCallingCode = a, this.nationalNumber = t, this.number = \"+\" + this.countryCallingCode + this.nationalNumber, this.getMetadata = function() {\n      return n;\n    };\n  }\n  return it(e, [{\n    key: \"setExt\",\n    value: function(t) {\n      this.ext = t;\n    }\n  }, {\n    key: \"getPossibleCountries\",\n    value: function() {\n      return this.country ? [this.country] : Hd(this.countryCallingCode, this.nationalNumber, this.getMetadata());\n    }\n  }, {\n    key: \"isPossible\",\n    value: function() {\n      return kd(this, {\n        v2: !0\n      }, this.getMetadata());\n    }\n  }, {\n    key: \"isValid\",\n    value: function() {\n      return Ud(this, {\n        v2: !0\n      }, this.getMetadata());\n    }\n  }, {\n    key: \"isNonGeographic\",\n    value: function() {\n      var t = new l(this.getMetadata());\n      return t.isNonGeographicCallingCode(this.countryCallingCode);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function(t) {\n      return this.number === t.number && this.ext === t.ext;\n    }\n    // This function was originally meant to be an equivalent for `validatePhoneNumberLength()`,\n    // but later it was found out that it doesn't include the possible `TOO_SHORT` result\n    // returned from `parsePhoneNumberWithError()` in the original `validatePhoneNumberLength()`,\n    // so eventually I simply commented out this method from the `PhoneNumber` class\n    // and just left the `validatePhoneNumberLength()` function, even though that one would require\n    // and additional step to also validate the actual country / calling code of the phone number.\n    // validateLength() {\n    // \tconst metadata = new Metadata(this.getMetadata())\n    // \tmetadata.selectNumberingPlan(this.countryCallingCode)\n    // \tconst result = checkNumberLength(this.nationalNumber, metadata)\n    // \tif (result !== 'IS_POSSIBLE') {\n    // \t\treturn result\n    // \t}\n    // }\n  }, {\n    key: \"getType\",\n    value: function() {\n      return J(this, {\n        v2: !0\n      }, this.getMetadata());\n    }\n  }, {\n    key: \"format\",\n    value: function(t, n) {\n      return et(this, t, n ? pe(pe({}, n), {}, {\n        v2: !0\n      }) : {\n        v2: !0\n      }, this.getMetadata());\n    }\n  }, {\n    key: \"formatNational\",\n    value: function(t) {\n      return this.format(\"NATIONAL\", t);\n    }\n  }, {\n    key: \"formatInternational\",\n    value: function(t) {\n      return this.format(\"INTERNATIONAL\", t);\n    }\n  }, {\n    key: \"getURI\",\n    value: function(t) {\n      return this.format(\"RFC3966\", t);\n    }\n  }]), e;\n}(), at = function(d) {\n  return /^[A-Z]{2}$/.test(d);\n};\nfunction ot(e, d) {\n  var t, n, r = new l(d);\n  return at(e) ? (t = e, r.selectNumberingPlan(t), n = r.countryCallingCode()) : n = e, {\n    country: t,\n    countryCallingCode: n\n  };\n}\nvar ut = new RegExp(\"([\" + f + \"])\");\nfunction st(e, d, t, n) {\n  if (d) {\n    var r = new l(n);\n    r.selectNumberingPlan(d, t);\n    var i = new RegExp(r.IDDPrefix());\n    if (e.search(i) === 0) {\n      e = e.slice(e.match(i)[0].length);\n      var a = e.match(ut);\n      if (!(a && a[1] != null && a[1].length > 0 && a[1] === \"0\"))\n        return e;\n    }\n  }\n}\nfunction lt(e, d) {\n  if (e && d.numberingPlan.nationalPrefixForParsing()) {\n    var t = new RegExp(\"^(?:\" + d.numberingPlan.nationalPrefixForParsing() + \")\"), n = t.exec(e);\n    if (n) {\n      var r, i, a = n.length - 1, $ = a > 0 && n[a];\n      if (d.nationalPrefixTransformRule() && $)\n        r = e.replace(t, d.nationalPrefixTransformRule()), a > 1 && (i = n[1]);\n      else {\n        var o = n[0];\n        r = e.slice(o.length), $ && (i = n[1]);\n      }\n      var u;\n      if ($) {\n        var c = e.indexOf(n[1]), v = e.slice(0, c);\n        v === d.numberingPlan.nationalPrefix() && (u = d.numberingPlan.nationalPrefix());\n      } else\n        u = n[0];\n      return {\n        nationalNumber: r,\n        nationalPrefix: u,\n        carrierCode: i\n      };\n    }\n  }\n  return {\n    nationalNumber: e\n  };\n}\nfunction V(e, d) {\n  var t = lt(e, d), n = t.carrierCode, r = t.nationalNumber;\n  if (r !== e) {\n    if (!ct(e, r, d))\n      return {\n        nationalNumber: e\n      };\n    if (d.possibleLengths() && !ft(r, d))\n      return {\n        nationalNumber: e\n      };\n  }\n  return {\n    nationalNumber: r,\n    carrierCode: n\n  };\n}\nfunction ct(e, d, t) {\n  return !(m(e, t.nationalNumberPattern()) && !m(d, t.nationalNumberPattern()));\n}\nfunction ft(e, d) {\n  switch (Y(e, d)) {\n    case \"TOO_SHORT\":\n    case \"INVALID_LENGTH\":\n      return !1;\n    default:\n      return !0;\n  }\n}\nfunction ht(e, d, t, n) {\n  var r = d ? Z(d, n) : t;\n  if (e.indexOf(r) === 0) {\n    n = new l(n), n.selectNumberingPlan(d, t);\n    var i = e.slice(r.length), a = V(i, n), $ = a.nationalNumber, o = V(e, n), u = o.nationalNumber;\n    if (!m(u, n.nationalNumberPattern()) && m($, n.nationalNumberPattern()) || Y(u, n) === \"TOO_LONG\")\n      return {\n        countryCallingCode: r,\n        number: i\n      };\n  }\n  return {\n    number: e\n  };\n}\nfunction pt(e, d, t, n) {\n  if (!e)\n    return {};\n  var r;\n  if (e[0] !== \"+\") {\n    var i = st(e, d, t, n);\n    if (i && i !== e)\n      r = !0, e = \"+\" + i;\n    else {\n      if (d || t) {\n        var a = ht(e, d, t, n), $ = a.countryCallingCode, o = a.number;\n        if ($)\n          return {\n            countryCallingCodeSource: \"FROM_NUMBER_WITHOUT_PLUS_SIGN\",\n            countryCallingCode: $,\n            number: o\n          };\n      }\n      return {\n        // No need to set it to `UNSPECIFIED`. It can be just `undefined`.\n        // countryCallingCodeSource: 'UNSPECIFIED',\n        number: e\n      };\n    }\n  }\n  if (e[1] === \"0\")\n    return {};\n  n = new l(n);\n  for (var u = 2; u - 1 <= rd && u <= e.length; ) {\n    var c = e.slice(1, u);\n    if (n.hasCallingCode(c))\n      return n.selectNumberingPlan(c), {\n        countryCallingCodeSource: r ? \"FROM_NUMBER_WITH_IDD\" : \"FROM_NUMBER_WITH_PLUS_SIGN\",\n        countryCallingCode: c,\n        number: e.slice(u)\n      };\n    u++;\n  }\n  return {};\n}\nfunction yt(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t)\n    return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = gt(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function() {\n      return n >= e.length ? { done: !0 } : { done: !1, value: e[n++] };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction gt(e, d) {\n  if (e) {\n    if (typeof e == \"string\")\n      return ge(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\")\n      return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))\n      return ge(e, d);\n  }\n}\nfunction ge(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++)\n    n[t] = e[t];\n  return n;\n}\nfunction mt(e, d) {\n  var t = d.countries, n = d.defaultCountry, r = d.metadata;\n  r = new l(r);\n  for (var i = [], a = yt(t), $; !($ = a()).done; ) {\n    var o = $.value;\n    if (r.country(o), r.leadingDigits()) {\n      if (e && e.search(r.leadingDigits()) === 0)\n        return o;\n    } else if (J({\n      phone: e,\n      country: o\n    }, void 0, r.metadata))\n      if (n) {\n        if (o === n)\n          return o;\n        i.push(o);\n      } else\n        return o;\n  }\n  if (i.length > 0)\n    return i[0];\n}\nvar vt = !1;\nfunction bt(e, d) {\n  var t = d.nationalNumber, n = d.defaultCountry, r = d.metadata;\n  if (vt && r.isNonGeographicCallingCode(e))\n    return \"001\";\n  var i = r.getCountryCodesForCallingCode(e);\n  if (i)\n    return i.length === 1 ? i[0] : mt(t, {\n      countries: i,\n      defaultCountry: n,\n      metadata: r.metadata\n    });\n}\nvar Ae = \"+\", Ct = \"[\\\\-\\\\.\\\\(\\\\)]?\", me = \"([\" + f + \"]|\" + Ct + \")\", Ot = \"^\\\\\" + Ae + me + \"*[\" + f + \"]\" + me + \"*$\", Pt = new RegExp(Ot, \"g\"), K = f, Nt = \"[\" + K + \"]+((\\\\-)*[\" + K + \"])*\", It = \"a-zA-Z\", wt = \"[\" + It + \"]+((\\\\-)*[\" + K + \"])*\", Et = \"^(\" + Nt + \"\\\\.)*\" + wt + \"\\\\.?$\", St = new RegExp(Et, \"g\"), ve = \"tel:\", W = \";phone-context=\", _t = \";isub=\";\nfunction Ft(e) {\n  var d = e.indexOf(W);\n  if (d < 0)\n    return null;\n  var t = d + W.length;\n  if (t >= e.length)\n    return \"\";\n  var n = e.indexOf(\";\", t);\n  return n >= 0 ? e.substring(t, n) : e.substring(t);\n}\nfunction Tt(e) {\n  return e === null ? !0 : e.length === 0 ? !1 : Pt.test(e) || St.test(e);\n}\nfunction xt(e, d) {\n  var t = d.extractFormattedPhoneNumber, n = Ft(e);\n  if (!Tt(n))\n    throw new g(\"NOT_A_NUMBER\");\n  var r;\n  if (n === null)\n    r = t(e) || \"\";\n  else {\n    r = \"\", n.charAt(0) === Ae && (r += n);\n    var i = e.indexOf(ve), a;\n    i >= 0 ? a = i + ve.length : a = 0;\n    var $ = e.indexOf(W);\n    r += e.substring(a, $);\n  }\n  var o = r.indexOf(_t);\n  if (o > 0 && (r = r.substring(0, o)), r !== \"\")\n    return r;\n}\nvar At = 250, Dt = new RegExp(\"[\" + X + f + \"]\"), Rt = new RegExp(\"[^\" + f + \"#]+$\");\nfunction Mt(e, d, t) {\n  if (d = d || {}, t = new l(t), d.defaultCountry && !t.hasCountry(d.defaultCountry))\n    throw d.v2 ? new g(\"INVALID_COUNTRY\") : new Error(\"Unknown country: \".concat(d.defaultCountry));\n  var n = kt(e, d.v2, d.extract), r = n.number, i = n.ext, a = n.error;\n  if (!r) {\n    if (d.v2)\n      throw a === \"TOO_SHORT\" ? new g(\"TOO_SHORT\") : new g(\"NOT_A_NUMBER\");\n    return {};\n  }\n  var $ = Gt(r, d.defaultCountry, d.defaultCallingCode, t), o = $.country, u = $.nationalNumber, c = $.countryCallingCode, v = $.countryCallingCodeSource, y = $.carrierCode;\n  if (!t.hasSelectedNumberingPlan()) {\n    if (d.v2)\n      throw new g(\"INVALID_COUNTRY\");\n    return {};\n  }\n  if (!u || u.length < z) {\n    if (d.v2)\n      throw new g(\"TOO_SHORT\");\n    return {};\n  }\n  if (u.length > nd) {\n    if (d.v2)\n      throw new g(\"TOO_LONG\");\n    return {};\n  }\n  if (d.v2) {\n    var b = new $t(c, u, t.metadata);\n    return o && (b.country = o), y && (b.carrierCode = y), i && (b.ext = i), b.__countryCallingCodeSource = v, b;\n  }\n  var N = (d.extended ? t.hasSelectedNumberingPlan() : o) ? m(u, t.nationalNumberPattern()) : !1;\n  return d.extended ? {\n    country: o,\n    countryCallingCode: c,\n    carrierCode: y,\n    valid: N,\n    possible: N ? !0 : !!(d.extended === !0 && t.possibleLengths() && xe(u, t)),\n    phone: u,\n    ext: i\n  } : N ? Bt(o, u, i) : {};\n}\nfunction Lt(e, d, t) {\n  if (e) {\n    if (e.length > At) {\n      if (t)\n        throw new g(\"TOO_LONG\");\n      return;\n    }\n    if (d === !1)\n      return e;\n    var n = e.search(Dt);\n    if (!(n < 0))\n      return e.slice(n).replace(Rt, \"\");\n  }\n}\nfunction kt(e, d, t) {\n  var n = xt(e, {\n    extractFormattedPhoneNumber: function(a) {\n      return Lt(a, t, d);\n    }\n  });\n  if (!n)\n    return {};\n  if (!Ed(n))\n    return Sd(n) ? {\n      error: \"TOO_SHORT\"\n    } : {};\n  var r = _d(n);\n  return r.ext ? r : {\n    number: n\n  };\n}\nfunction Bt(e, d, t) {\n  var n = {\n    country: e,\n    phone: d\n  };\n  return t && (n.ext = t), n;\n}\nfunction Gt(e, d, t, n) {\n  var r = pt(ae(e), d, t, n.metadata), i = r.countryCallingCodeSource, a = r.countryCallingCode, $ = r.number, o;\n  if (a)\n    n.selectNumberingPlan(a);\n  else if ($ && (d || t))\n    n.selectNumberingPlan(d, t), d && (o = d), a = t || Z(d, n.metadata);\n  else\n    return {};\n  if (!$)\n    return {\n      countryCallingCodeSource: i,\n      countryCallingCode: a\n    };\n  var u = V(ae($), n), c = u.nationalNumber, v = u.carrierCode, y = bt(a, {\n    nationalNumber: c,\n    defaultCountry: d,\n    metadata: n\n  });\n  return y && (o = y, y === \"001\" || n.country(o)), {\n    country: o,\n    countryCallingCode: a,\n    countryCallingCodeSource: i,\n    nationalNumber: c,\n    carrierCode: v\n  };\n}\nfunction be(e, d) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    d && (n = n.filter(function(r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, n);\n  }\n  return t;\n}\nfunction Ce(e) {\n  for (var d = 1; d < arguments.length; d++) {\n    var t = arguments[d] != null ? arguments[d] : {};\n    d % 2 ? be(Object(t), !0).forEach(function(n) {\n      jt(e, n, t[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : be(Object(t)).forEach(function(n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));\n    });\n  }\n  return e;\n}\nfunction jt(e, d, t) {\n  return d in e ? Object.defineProperty(e, d, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[d] = t, e;\n}\nfunction Ut(e, d, t) {\n  return Mt(e, Ce(Ce({}, d), {}, {\n    v2: !0\n  }), t);\n}\nfunction Oe(e, d) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    d && (n = n.filter(function(r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, n);\n  }\n  return t;\n}\nfunction Ht(e) {\n  for (var d = 1; d < arguments.length; d++) {\n    var t = arguments[d] != null ? arguments[d] : {};\n    d % 2 ? Oe(Object(t), !0).forEach(function(n) {\n      Vt(e, n, t[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : Oe(Object(t)).forEach(function(n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));\n    });\n  }\n  return e;\n}\nfunction Vt(e, d, t) {\n  return d in e ? Object.defineProperty(e, d, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[d] = t, e;\n}\nfunction Kt(e, d) {\n  return Zt(e) || Xt(e, d) || zt(e, d) || Wt();\n}\nfunction Wt() {\n  throw new TypeError(`Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction zt(e, d) {\n  if (e) {\n    if (typeof e == \"string\")\n      return Pe(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\")\n      return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))\n      return Pe(e, d);\n  }\n}\nfunction Pe(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++)\n    n[t] = e[t];\n  return n;\n}\nfunction Xt(e, d) {\n  var t = e == null ? null : typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t != null) {\n    var n = [], r = !0, i = !1, a, $;\n    try {\n      for (t = t.call(e); !(r = (a = t.next()).done) && (n.push(a.value), !(d && n.length === d)); r = !0)\n        ;\n    } catch (o) {\n      i = !0, $ = o;\n    } finally {\n      try {\n        !r && t.return != null && t.return();\n      } finally {\n        if (i)\n          throw $;\n      }\n    }\n    return n;\n  }\n}\nfunction Zt(e) {\n  if (Array.isArray(e))\n    return e;\n}\nfunction Yt(e) {\n  var d = Array.prototype.slice.call(e), t = Kt(d, 4), n = t[0], r = t[1], i = t[2], a = t[3], $, o, u;\n  if (typeof n == \"string\")\n    $ = n;\n  else\n    throw new TypeError(\"A text for parsing must be a string.\");\n  if (!r || typeof r == \"string\")\n    a ? (o = i, u = a) : (o = void 0, u = i), r && (o = Ht({\n      defaultCountry: r\n    }, o));\n  else if (T(r))\n    i ? (o = r, u = i) : u = r;\n  else\n    throw new Error(\"Invalid second argument: \".concat(r));\n  return {\n    text: $,\n    options: o,\n    metadata: u\n  };\n}\nfunction Ne(e, d) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    d && (n = n.filter(function(r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, n);\n  }\n  return t;\n}\nfunction Ie(e) {\n  for (var d = 1; d < arguments.length; d++) {\n    var t = arguments[d] != null ? arguments[d] : {};\n    d % 2 ? Ne(Object(t), !0).forEach(function(n) {\n      Jt(e, n, t[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : Ne(Object(t)).forEach(function(n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));\n    });\n  }\n  return e;\n}\nfunction Jt(e, d, t) {\n  return d in e ? Object.defineProperty(e, d, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[d] = t, e;\n}\nfunction qt(e, d, t) {\n  d && d.defaultCountry && !bd(d.defaultCountry, t) && (d = Ie(Ie({}, d), {}, {\n    defaultCountry: void 0\n  }));\n  try {\n    return Ut(e, d, t);\n  } catch (n) {\n    if (!(n instanceof g))\n      throw n;\n  }\n}\nfunction Qt() {\n  var e = Yt(arguments), d = e.text, t = e.options, n = e.metadata;\n  return qt(d, t, n);\n}\nfunction B() {\n  return Ye(Qt, arguments);\n}\nconst e0 = {\n  beforeMount(e, d, t) {\n    if (typeof d.value != \"function\") {\n      const n = t.context.name;\n      let r = `[Vue-click-outside:] provided expression ${d.expression} is not a function, but has to be`;\n      n && (r += `Found in component ${n}`), console.warn(r);\n    }\n    e.clickOutsideEvent = function(n) {\n      const r = n.composedPath ? n.composedPath() : n.path;\n      e === n.target || e.contains(n.target) || r.includes(e) || d.value(n, e);\n    }, document.body.addEventListener(\"click\", e.clickOutsideEvent);\n  },\n  unmounted(e) {\n    document.body.removeEventListener(\"click\", e.clickOutsideEvent);\n  }\n}, d0 = (e, d) => {\n  const t = e.__vccOpts || e;\n  for (const [n, r] of d)\n    t[n] = r;\n  return t;\n};\nfunction s(e) {\n  const d = G.options[e];\n  return typeof d > \"u\" ? G.options[e] : d;\n}\nconst t0 = {\n  name: \"VueTelInput\",\n  directives: {\n    clickOutside: e0\n  },\n  props: {\n    modelValue: {\n      type: String,\n      default: \"\"\n    },\n    allCountries: {\n      type: Array,\n      default: () => s(\"allCountries\")\n    },\n    autoFormat: {\n      type: Boolean,\n      default: () => s(\"autoFormat\")\n    },\n    customValidate: {\n      type: [Boolean, RegExp],\n      default: () => s(\"customValidate\")\n    },\n    defaultCountry: {\n      // Default country code, ie: 'AU'\n      // Will override the current country of user\n      type: [String, Number],\n      default: () => s(\"defaultCountry\")\n    },\n    disabled: {\n      type: Boolean,\n      default: () => s(\"disabled\")\n    },\n    autoDefaultCountry: {\n      type: Boolean,\n      default: () => s(\"autoDefaultCountry\")\n    },\n    dropdownOptions: {\n      type: Object,\n      default: () => s(\"dropdownOptions\")\n    },\n    ignoredCountries: {\n      type: Array,\n      default: () => s(\"ignoredCountries\")\n    },\n    inputOptions: {\n      type: Object,\n      default: () => s(\"inputOptions\")\n    },\n    invalidMsg: {\n      type: String,\n      default: () => s(\"invalidMsg\")\n    },\n    mode: {\n      type: String,\n      default: () => s(\"mode\")\n    },\n    onlyCountries: {\n      type: Array,\n      default: () => s(\"onlyCountries\")\n    },\n    preferredCountries: {\n      type: Array,\n      default: () => s(\"preferredCountries\")\n    },\n    validCharactersOnly: {\n      type: Boolean,\n      default: () => s(\"validCharactersOnly\")\n    },\n    styleClasses: {\n      type: [String, Array, Object],\n      default: () => s(\"styleClasses\")\n    }\n  },\n  data() {\n    return {\n      phone: \"\",\n      activeCountryCode: \"\",\n      open: !1,\n      finishMounted: !1,\n      selectedIndex: null,\n      typeToFindInput: \"\",\n      typeToFindTimer: null,\n      dropdownOpenDirection: \"below\",\n      parsedPlaceholder: this.inputOptions.placeholder,\n      searchQuery: \"\"\n    };\n  },\n  computed: {\n    activeCountry() {\n      return this.findCountry(this.activeCountryCode);\n    },\n    parsedMode() {\n      return this.mode === \"auto\" ? !this.phone || this.phone[0] !== \"+\" ? \"national\" : \"international\" : [\"international\", \"national\"].includes(this.mode) ? this.mode : (console.error('Invalid value of prop \"mode\"'), \"international\");\n    },\n    filteredCountries() {\n      return this.onlyCountries.length ? this.allCountries.filter(({ iso2: e }) => this.onlyCountries.some((d) => d.toUpperCase() === e)) : this.ignoredCountries.length ? this.allCountries.filter(\n        ({ iso2: e }) => !this.ignoredCountries.includes(e.toUpperCase()) && !this.ignoredCountries.includes(e.toLowerCase())\n      ) : this.allCountries;\n    },\n    sortedCountries() {\n      const d = [...this.getCountries(this.preferredCountries).map((r) => ({ ...r, preferred: !0 })), ...this.filteredCountries];\n      if (!this.dropdownOptions.showSearchBox)\n        return d;\n      const n = this.searchQuery.replace(/[~`!@#$%^&*()+={}\\[\\];:\\'\\\"<>.,\\/\\\\\\?-_]/g, \"\");\n      return d.filter(\n        (r) => new RegExp(n, \"i\").test(r.name) || new RegExp(n, \"i\").test(r.iso2) || new RegExp(n, \"i\").test(r.dialCode)\n      );\n    },\n    phoneObject() {\n      var i, a, $;\n      let e;\n      ((i = this.phone) == null ? void 0 : i[0]) === \"+\" ? e = B(this.phone) || {} : e = B(this.phone, this.activeCountryCode) || {};\n      const {\n        metadata: d,\n        ...t\n      } = e;\n      let n = (a = e.isValid) == null ? void 0 : a.call(e), r = this.phone;\n      return n && (r = ($ = e.format) == null ? void 0 : $.call(e, this.parsedMode.toUpperCase())), e.country && (this.ignoredCountries.length || this.onlyCountries.length) && (this.findCountry(e.country) || (n = !1, Object.assign(e, { country: null }))), Object.assign(t, {\n        countryCode: e.country,\n        valid: n,\n        country: this.activeCountry,\n        formatted: r\n      }), t;\n    }\n  },\n  watch: {\n    activeCountry(e, d) {\n      if (!e && (d != null && d.iso2)) {\n        this.activeCountryCode = d.iso2;\n        return;\n      }\n      e != null && e.iso2 && this.$emit(\"country-changed\", e);\n    },\n    \"phoneObject.countryCode\": function(e) {\n      this.activeCountryCode = e || \"\";\n    },\n    \"phoneObject.valid\": function() {\n      this.$emit(\"validate\", this.phoneObject);\n    },\n    \"phoneObject.formatted\": function(e) {\n      !this.autoFormat || this.customValidate || (this.emitInput(e), this.$nextTick(() => {\n        e && !this.modelValue && (this.phone = e);\n      }));\n    },\n    // finishMounted() {\n    //   this.resetPlaceholder();\n    // },\n    \"inputOptions.placeholder\": function() {\n      this.resetPlaceholder();\n    },\n    modelValue(e, d) {\n      this.testCharacters() ? this.phone = e : this.$nextTick(() => {\n        this.phone = d, this.onInput();\n      });\n    },\n    open(e) {\n      e ? (this.setDropdownPosition(), this.$emit(\"open\")) : this.$emit(\"close\");\n    }\n  },\n  mounted() {\n    this.modelValue && (this.phone = this.modelValue.trim()), this.cleanInvalidCharacters(), this.initializeCountry().then(() => {\n      var e;\n      !this.phone && ((e = this.inputOptions) != null && e.showDialCode) && this.activeCountryCode && (this.phone = `+${this.activeCountryCode}`), this.$emit(\"validate\", this.phoneObject);\n    }).catch(console.error).then(() => {\n      this.finishMounted = !0;\n    });\n  },\n  methods: {\n    resetPlaceholder() {\n      this.parsedPlaceholder = this.inputOptions.placeholder;\n    },\n    initializeCountry() {\n      return new Promise((e) => {\n        var t;\n        if (((t = this.phone) == null ? void 0 : t[0]) === \"+\") {\n          e();\n          return;\n        }\n        if (this.defaultCountry) {\n          if (typeof this.defaultCountry == \"string\") {\n            this.choose(this.defaultCountry), e();\n            return;\n          }\n          if (typeof this.defaultCountry == \"number\") {\n            const n = this.findCountryByDialCode(this.defaultCountry);\n            if (n) {\n              this.choose(n.iso2), e();\n              return;\n            }\n          }\n        }\n        const d = this.preferredCountries[0] || this.filteredCountries[0];\n        this.autoDefaultCountry ? We().then((n) => {\n          this.choose(n || this.activeCountryCode);\n        }).catch((n) => {\n          console.warn(n), this.choose(d);\n        }).then(() => {\n          e();\n        }) : (this.choose(d), e());\n      });\n    },\n    /**\n     * Get the list of countries from the list of iso2 code\n     */\n    getCountries(e = []) {\n      return e.map((d) => this.findCountry(d)).filter(Boolean);\n    },\n    findCountry(e = \"\") {\n      return this.filteredCountries.find((d) => d.iso2 === e.toUpperCase());\n    },\n    findCountryByDialCode(e) {\n      return this.filteredCountries.find((d) => Number(d.dialCode) === e);\n    },\n    getItemClass(e, d) {\n      const t = this.selectedIndex === e, n = e === this.preferredCountries.length - 1, r = this.preferredCountries.some((i) => i.toUpperCase() === d);\n      return {\n        highlighted: t,\n        \"last-preferred\": n,\n        preferred: r\n      };\n    },\n    choose(e) {\n      var t, n;\n      let d = e;\n      if (typeof d == \"string\" && (d = this.findCountry(d)), !!d) {\n        if (((t = this.phone) == null ? void 0 : t[0]) === \"+\" && d.iso2 && this.phoneObject.nationalNumber) {\n          this.activeCountryCode = d.iso2, this.phone = B(\n            this.phoneObject.nationalNumber,\n            d.iso2\n          ).formatInternational();\n          return;\n        }\n        if ((n = this.inputOptions) != null && n.showDialCode && d) {\n          this.phone = `+${d.dialCode}`, this.activeCountryCode = d.iso2 || \"\";\n          return;\n        }\n        this.activeCountryCode = d.iso2 || \"\", this.emitInput(this.phone);\n      }\n    },\n    cleanInvalidCharacters() {\n      const e = this.phone;\n      if (this.validCharactersOnly) {\n        const d = this.phone.match(/[()\\-+0-9\\s]*/g);\n        this.phone = d.join(\"\");\n      }\n      if (this.customValidate && this.customValidate instanceof RegExp) {\n        const d = this.phone.match(this.customValidate);\n        this.phone = d.join(\"\");\n      }\n      e !== this.phone && this.emitInput(this.phone);\n    },\n    testCharacters() {\n      return this.validCharactersOnly && !/^[()\\-+0-9\\s]*$/.test(this.phone) ? !1 : this.customValidate ? this.testCustomValidate() : !0;\n    },\n    testCustomValidate() {\n      return this.customValidate instanceof RegExp ? this.customValidate.test(this.phone) : !1;\n    },\n    onInput() {\n      this.$refs.input.setCustomValidity(this.phoneObject.valid ? \"\" : this.invalidMsg), this.emitInput(this.phone);\n    },\n    emitInput(e) {\n      this.$emit(\"update:modelValue\", e), this.$emit(\"on-input\", e, this.phoneObject, this.$refs.input);\n    },\n    onBlur() {\n      this.$emit(\"blur\");\n    },\n    onFocus() {\n      ze(this.$refs.input, this.phone.length), this.$emit(\"focus\");\n    },\n    onEnter() {\n      this.$emit(\"enter\");\n    },\n    onSpace() {\n      this.$emit(\"space\");\n    },\n    focus() {\n      this.$refs.input.focus();\n    },\n    toggleDropdown() {\n      this.disabled || this.dropdownOptions.disabled || (this.searchQuery = \"\", this.open = !this.open);\n    },\n    clickedOutside() {\n      this.open = !1;\n    },\n    keyboardNav(e) {\n      if (e.keyCode === 40) {\n        e.preventDefault(), this.open = !0, this.selectedIndex === null ? this.selectedIndex = 0 : this.selectedIndex = Math.min(this.sortedCountries.length - 1, this.selectedIndex + 1);\n        const d = this.$refs.list.children[this.selectedIndex];\n        d.focus(), d.offsetTop + d.clientHeight > this.$refs.list.scrollTop + this.$refs.list.clientHeight && (this.$refs.list.scrollTop = d.offsetTop - this.$refs.list.clientHeight + d.clientHeight);\n      } else if (e.keyCode === 38) {\n        e.preventDefault(), this.open = !0, this.selectedIndex === null ? this.selectedIndex = this.sortedCountries.length - 1 : this.selectedIndex = Math.max(0, this.selectedIndex - 1);\n        const d = this.$refs.list.children[this.selectedIndex];\n        d.focus(), d.offsetTop < this.$refs.list.scrollTop && (this.$refs.list.scrollTop = d.offsetTop);\n      } else if (e.keyCode === 13)\n        this.selectedIndex !== null && this.choose(this.sortedCountries[this.selectedIndex]), this.open = !this.open;\n      else {\n        this.typeToFindInput += e.key, clearTimeout(this.typeToFindTimer), this.typeToFindTimer = setTimeout(() => {\n          this.typeToFindInput = \"\";\n        }, 700);\n        const d = this.sortedCountries.slice(this.preferredCountries.length).findIndex((t) => t.name.toLowerCase().startsWith(this.typeToFindInput));\n        if (d >= 0) {\n          this.selectedIndex = this.preferredCountries.length + d;\n          const t = this.$refs.list.children[this.selectedIndex], n = t.offsetTop < this.$refs.list.scrollTop, r = t.offsetTop + t.clientHeight > this.$refs.list.scrollTop + this.$refs.list.clientHeight;\n          (n || r) && (this.$refs.list.scrollTop = t.offsetTop - this.$refs.list.clientHeight / 2);\n        }\n      }\n    },\n    reset() {\n      this.selectedIndex = this.sortedCountries.map((e) => e.iso2).indexOf(this.activeCountryCode), this.open = !1;\n    },\n    setDropdownPosition() {\n      window.innerHeight - this.$el.getBoundingClientRect().bottom > 200 ? this.dropdownOpenDirection = \"below\" : this.dropdownOpenDirection = \"above\";\n    }\n  }\n}, n0 = [\"aria-expanded\", \"tabindex\"], r0 = { class: \"vti__selection\" }, i0 = {\n  key: 1,\n  class: \"vti__country-code\"\n}, $0 = { class: \"vti__dropdown-arrow\" }, a0 = [\"placeholder\"], o0 = [\"onClick\", \"onMousemove\", \"aria-selected\"], u0 = { key: 1 }, s0 = [\"type\", \"autocomplete\", \"autofocus\", \"disabled\", \"id\", \"maxlength\", \"name\", \"placeholder\", \"readonly\", \"required\", \"tabindex\", \"value\", \"aria-describedby\"];\nfunction l0(e, d, t, n, r, i) {\n  const a = ke(\"click-outside\");\n  return h(), p(\"div\", {\n    class: C([\"vue-tel-input\", t.styleClasses, { disabled: t.disabled }])\n  }, [\n    M((h(), p(\"div\", {\n      \"aria-label\": \"Country Code Selector\",\n      \"aria-haspopup\": \"listbox\",\n      \"aria-expanded\": r.open,\n      role: \"button\",\n      class: C([\"vti__dropdown\", { open: r.open, disabled: t.dropdownOptions.disabled }]),\n      tabindex: t.dropdownOptions.tabindex,\n      onKeydown: [\n        d[2] || (d[2] = (...$) => i.keyboardNav && i.keyboardNav(...$)),\n        d[4] || (d[4] = I((...$) => i.toggleDropdown && i.toggleDropdown(...$), [\"space\"])),\n        d[5] || (d[5] = I((...$) => i.reset && i.reset(...$), [\"esc\"])),\n        d[6] || (d[6] = I((...$) => i.reset && i.reset(...$), [\"tab\"]))\n      ],\n      onClick: d[3] || (d[3] = (...$) => i.toggleDropdown && i.toggleDropdown(...$))\n    }, [\n      S(\"span\", r0, [\n        t.dropdownOptions.showFlags ? (h(), p(\"span\", {\n          key: 0,\n          class: C([\"vti__flag\", r.activeCountryCode.toLowerCase()])\n        }, null, 2)) : O(\"\", !0),\n        t.dropdownOptions.showDialCodeInSelection ? (h(), p(\"span\", i0, \" +\" + _(i.activeCountry && i.activeCountry.dialCode), 1)) : O(\"\", !0),\n        q(e.$slots, \"arrow-icon\", { open: r.open }, () => [\n          S(\"span\", $0, _(r.open ? \"▲\" : \"▼\"), 1)\n        ])\n      ]),\n      r.open ? (h(), p(\"ul\", {\n        key: 0,\n        ref: \"list\",\n        class: C([\"vti__dropdown-list\", r.dropdownOpenDirection]),\n        role: \"listbox\"\n      }, [\n        t.dropdownOptions.showSearchBox ? M((h(), p(\"input\", {\n          key: 0,\n          class: \"vti__input vti__search_box\",\n          \"aria-label\": \"Search by country name or country code\",\n          placeholder: i.sortedCountries.length ? i.sortedCountries[0].name : \"\",\n          type: \"text\",\n          \"onUpdate:modelValue\": d[0] || (d[0] = ($) => r.searchQuery = $),\n          onClick: d[1] || (d[1] = Be(() => {\n          }, [\"stop\"]))\n        }, null, 8, a0)), [\n          [Ge, r.searchQuery]\n        ]) : O(\"\", !0),\n        (h(!0), p(je, null, Ue(i.sortedCountries, ($, o) => (h(), p(\"li\", {\n          role: \"option\",\n          class: C([\"vti__dropdown-item\", i.getItemClass(o, $.iso2)]),\n          key: $.iso2 + ($.preferred ? \"-preferred\" : \"\"),\n          tabindex: \"-1\",\n          onClick: (u) => i.choose($),\n          onMousemove: (u) => r.selectedIndex = o,\n          \"aria-selected\": r.activeCountryCode === $.iso2 && !$.preferred\n        }, [\n          t.dropdownOptions.showFlags ? (h(), p(\"span\", {\n            key: 0,\n            class: C([\"vti__flag\", $.iso2.toLowerCase()])\n          }, null, 2)) : O(\"\", !0),\n          S(\"strong\", null, _($.name), 1),\n          t.dropdownOptions.showDialCodeInList ? (h(), p(\"span\", u0, \" +\" + _($.dialCode), 1)) : O(\"\", !0)\n        ], 42, o0))), 128))\n      ], 2)) : O(\"\", !0)\n    ], 42, n0)), [\n      [a, i.clickedOutside]\n    ]),\n    M(S(\"input\", {\n      \"onUpdate:modelValue\": d[7] || (d[7] = ($) => r.phone = $),\n      ref: \"input\",\n      type: t.inputOptions.type,\n      autocomplete: t.inputOptions.autocomplete,\n      autofocus: t.inputOptions.autofocus,\n      class: C([\"vti__input\", t.inputOptions.styleClasses]),\n      disabled: t.disabled,\n      id: t.inputOptions.id,\n      maxlength: t.inputOptions.maxlength,\n      name: t.inputOptions.name,\n      placeholder: r.parsedPlaceholder,\n      readonly: t.inputOptions.readonly,\n      required: t.inputOptions.required,\n      tabindex: t.inputOptions.tabindex,\n      value: t.modelValue,\n      \"aria-describedby\": t.inputOptions[\"aria-describedby\"],\n      onBlur: d[8] || (d[8] = (...$) => i.onBlur && i.onBlur(...$)),\n      onFocus: d[9] || (d[9] = (...$) => i.onFocus && i.onFocus(...$)),\n      onInput: d[10] || (d[10] = (...$) => i.onInput && i.onInput(...$)),\n      onKeyup: [\n        d[11] || (d[11] = I((...$) => i.onEnter && i.onEnter(...$), [\"enter\"])),\n        d[12] || (d[12] = I((...$) => i.onSpace && i.onSpace(...$), [\"space\"]))\n      ]\n    }, null, 42, s0), [\n      [He, r.phone]\n    ]),\n    q(e.$slots, \"icon-right\")\n  ], 2);\n}\nconst c0 = /* @__PURE__ */ d0(t0, [[\"render\", l0]]), h0 = {\n  install(e, d = {}) {\n    const {\n      dropdownOptions: t,\n      inputOptions: n,\n      ...r\n    } = d, {\n      dropdownOptions: i,\n      inputOptions: a,\n      ...$\n    } = we;\n    G.options = {\n      inputOptions: {\n        ...a,\n        ...n\n      },\n      dropdownOptions: {\n        ...i,\n        ...t\n      },\n      ...$,\n      ...r\n    }, e.component(\"vue-tel-input\", c0);\n  }\n};\nexport {\n  c0 as VueTelInput,\n  h0 as default\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AACA,IAAM,KAAK;AAAA,EACT;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,KAAK;AAAA,EAC3X;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,KAAK,KAAK,GAAG;AAAA,EAChB;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,OAAO;AAAA,EACV;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,OAAO;AAAA,EACV;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,OAAO,OAAO,KAAK;AAAA,EACtjf;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,MAAM;AAAA,EACjD;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,MAAM,GAAG;AAAA,EACZ;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,OAAO,KAAK;AAAA,EACf;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,OAAO,KAAK;AAAA,EACf;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,IAAI;AAAA,EACP;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA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C,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,IAAI,GAAG,KAAK,CAAC,IAA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",
  "names": []
}
